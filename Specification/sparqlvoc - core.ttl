prefix dcm: <http://purl.org/dc/dcmitype/>
prefix dct: <http://purl.org/dc/terms/>
prefix decl: <http://www.w3.org/ns/sparql#model/decl/>
prefix foaf: <http://xmlns.com/foaf/0.1/>
prefix owl: <http://www.w3.org/2002/07/owl#>
prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>
prefix respec: <https://respec.org/model/>
prefix rule: <http://www.w3.org/ns/sparql#model/rule/>
prefix section: <https://www.w3.org/TR/sparql11-query/>
prefix sh: <http://www.w3.org/ns/shacl#>
prefix shp: <http://www.w3.org/ns/sparql#model/shp/>
prefix skos: <http://www.w3.org/2004/02/skos/core#>
prefix sparql: <http://www.w3.org/ns/sparql#model/def/>
prefix standard: <http://www.w3.org/ns/sparql#model/>
prefix status: <http://purl.org/adms/status/>
prefix target: <http://www.w3.org/ns/sparql#model/target/>
prefix vann: <http://purl.org/vocab/vann/>
prefix void: <http://rdfs.org/ns/void#>
prefix xsd: <http://www.w3.org/2001/XMLSchema#>


  sparql:
    a
      owl:Ontology,
      void:Dataset;
    dct:created '2023-10-29'^^xsd:date;
    dct:creator
      'Flores Bakker',
      'Wouter Beek';
    dct:language 'iso639-1:en';
    dct:license 'http://creativecommons.org/licenses/by/4.0'^^xsd:anyURI;
    dct:publisher <https://rijksfinancien.nl>;
    dct:status status:UnderDevelopment;
    dct:subject 'SPARQL'@en;
    dct:title 'SPARQL Vocabulary'@en;
    dct:source <https://github.com/floresbakker/sparqlvoc>;

    dct:abstract """The SPARQL Vocabulary provides a RDF-based formal representation of the SPARQL query language according to the SPARQL 1.1 specification https://www.w3.org/TR/sparql11-query/. It leverages modeling and generation of SPARQL queries through an abstract syntax tree (AST) framework. To this end, the vocabulary defines classes and properties to describe the various components of SPARQL queries, including SELECT, WHERE, FILTER, and UNION constructs. Additionally, it incorporates SHACL shapes for validating SPARQL query structures and supports algorithms for serializing SPARQL queries from RDF representations. This vocabulary enhances semantic data retrieval and management, bridging SPARQL with broader semantic web technologies."""@en;

    dct:description """The SPARQL Vocabulary formalizes the SPARQL query language, offering a structured representation of its syntax and semantics. The vocabulary models the SPARQL query language as an abstract syntax tree, consisting of the following nodes in a tree:

- tree
  - node
    - non-terminal node
    - terminal node
        - keyword
        - symbol
        - symbol sequence
        - character sequence

As a source for the model we use the grammar from the SPARQL 1.1 specification: https://www.w3.org/TR/sparql11-query/#grammar.

The vocabulary defines classes for different SPARQL query components, such as 'sparql:SelectQuery' for SELECT queries, 'sparql:WhereClause' for WHERE clauses, and properties to capture relationships between these components. Central to this vocabulary is the class 'sparql:QueryUnit', which serves as a building block for all types of queries. All SPARQL building blocks are in a way connected to this root node in the abstract syntax tree of SPARQL. Each query component is associated with a fragment of a SPARQL query. The fragment itself is modeled though the datatype property sparql:fragment, connected to each node of the tree. The vocabulary also includes SHACL shapes to validate the correctness of SPARQL query structures, ensuring that generated queries conform to the syntax rules of SPARQL. The SPARQL Vocabulary offers five algorithms captured in five SHACL nodeshapes to generate an actual SPARQL query based on its RDF-based abstract syntax tree. These five algorithms align with the above mentioned model of the abstract syntax tree and its components.

1. shp:NonTerminalNode
2. shp:Keyword
3. shp:Symbol
4. shp:SymbolSequence
5. shp:CharacterSequence

These shapes allow for the creation of well-formed queries that can be efficiently executed against RDF data stores. This comprehensive approach facilitates the generation of SPARQL queries from RDF representations, allowing users to leverage semantic technologies for effective data querying and retrieval."""@en;

    respec:introduction '''In the rapidly evolving landscape of semantic web technologies, the ability to query and manipulate RDF data effectively is paramount. As organizations seek to harness the power of linked data and knowledge graphs, they encounter the need for robust frameworks that facilitate the creation, validation, and execution of SPARQL queries. The SPARQL Vocabulary addresses this necessity by providing a structured approach to model and generate SPARQL queries through an abstract syntax tree representation, enhancing the agility and precision of data retrieval operations.'''@en;

    respec:background '''Organizations today are inundated with data from a multitude of sources, necessitating effective querying techniques to extract meaningful insights. The complexity of SPARQL, with its various query forms and constructs, presents challenges for users seeking to create well-structured queries. As the demand for semantic interoperability and linked data increases, there is a pressing need for frameworks that facilitate SPARQL query generation while ensuring adherence to semantic web standards. The SPARQL Vocabulary meets these challenges head-on, offering a formalized structure for both novice and experienced users to construct SPARQL queries with confidence.'''@en;

    respec:objective '''To address the challenges of SPARQL query generation and validation, we introduce the SPARQL Vocabulary - a transformative framework designed to empower users in mastering SPARQL query creation. This vocabulary enables users to (1) model and represent SPARQL query constructs, (2) generate and validate SPARQL queries programmatically, and (3) ensure compliance with SPARQL syntax rules. By leveraging the power of RDF and the flexibility of an abstract syntax tree, the SPARQL Vocabulary enhances the efficiency and accuracy of data retrieval in semantic web applications, fostering greater insights from linked data resources.'''@en;

    respec:audience '''This document is intended for a diverse audience of software developers, data scientists, semantic web practitioners, and anyone involved in querying and managing RDF data. It aims to support users seeking to enhance their understanding and application of SPARQL within the context of semantic technologies.'''@en;

    respec:acknowledgements '''This vocabulary has been developed through collaborative efforts and contributions from a dedicated community of experts in the fields of semantic web technologies and data management. Their insights and expertise have been vital in shaping the SPARQL Vocabulary and ensuring its relevance to contemporary data practices.'''@en;

    foaf:depiction 'https://www.rijksfinancien.nl/themes/custom/indicia_theme/files/logo-rijksoverheid.svg'^^xsd:anyURI;
    foaf:homepage 'https://www.rijksfinancien.nl/'^^xsd:anyURI;
    owl:imports
      dct:,
      owl:,
      rdf:,
      rdfs:,
      skos:;
    sh:declare
      decl:sparql,
      decl:rdf,
      decl:rdfs,
      decl:xsd;      
    owl:versionInfo '0.1.0';
    vann:preferredNamespacePrefix 'sparql';
    vann:preferredNamespaceUri 'http://www.w3.org/ns/sparql#model/def/';
    void:uriRegexPattern '^http://www.w3.org/ns/sparql#model/def/';
    void:uriSpace 'http://www.w3.org/ns/sparql#model/def/'^^xsd:anyURI.

  decl:sparql
    sh:prefix "sparql";
    sh:namespace "http://www.w3.org/ns/sparql#model/def/"^^xsd:anyURI.

  decl:rdf
    sh:prefix "rdf";
    sh:namespace "http://www.w3.org/1999/02/22-rdf-syntax-ns#"^^xsd:anyURI.

  decl:rdfs
    sh:prefix "rdfs";
    sh:namespace "http://www.w3.org/2000/01/rdf-schema#"^^xsd:anyURI.

  decl:xsd
    sh:prefix "xsd";
    sh:namespace "http://www.w3.org/2001/XMLSchema#"^^xsd:anyURI.

  standard:sparql
    a dct:Standard;
    dct:created '2024-04-07'^^xsd:date;
    dct:source 'https://www.w3.org/TR/sparql11-query/'^^xsd:anyURI;
    skos:prefLabel 'SPARQL'@en;
    rdfs:isDefinedBy sparql:.

### Sections from the SPARQL Specification

  section:AbstractSyntaxTree
    a dcm:Text;
    dct:isPartOf standard:sparql;
    dct:source 'https://www.w3.org/TR/sparql11-query/'^^xsd:anyURI;
    skos:prefLabel 'Abstract Syntax Tree'@en;
    rdfs:isDefinedBy sparql:.

  section:Node
    a dcm:Text;
    dct:isPartOf standard:sparql;
    dct:source 'https://www.w3.org/TR/sparql11-query/'^^xsd:anyURI;
    skos:prefLabel 'Node'@en;
    rdfs:isDefinedBy sparql:.

  section:NonTerminalNode
    a dcm:Text;
    dct:isPartOf standard:sparql;
    dct:source 'https://www.w3.org/TR/sparql11-query/'^^xsd:anyURI;
    skos:prefLabel 'Non terminal node'@en;
    rdfs:isDefinedBy sparql:.

  section:TerminalNode
    a dcm:Text;
    dct:isPartOf standard:sparql;
    dct:source 'https://www.w3.org/TR/sparql11-query/'^^xsd:anyURI;
    skos:prefLabel 'Terminal node'@en;
    rdfs:isDefinedBy sparql:.

  section:Keyword
    a dcm:Text;
    dct:isPartOf standard:sparql;
    dct:source 'https://www.w3.org/TR/sparql11-query/'^^xsd:anyURI;
    skos:prefLabel 'Keyword'@en;
    rdfs:isDefinedBy sparql:.

  section:Symbol
    a dcm:Text;
    dct:isPartOf standard:sparql;
    dct:source 'https://www.w3.org/TR/sparql11-query/'^^xsd:anyURI;
    skos:prefLabel 'Symbol'@en;
    rdfs:isDefinedBy sparql:.

  section:SymbolSequence
    a dcm:Text;
    dct:isPartOf standard:sparql;
    dct:source 'https://www.w3.org/TR/sparql11-query/'^^xsd:anyURI;
    skos:prefLabel 'Symbol sequence'@en;
    rdfs:isDefinedBy sparql:.    

  section:CharacterSequence
    a dcm:Text;
    dct:isPartOf standard:sparql;
    dct:source 'https://www.w3.org/TR/sparql11-query/'^^xsd:anyURI;
    skos:prefLabel 'Character sequence'@en;
    rdfs:isDefinedBy sparql:.    

section:Query
    a dcm:Text;
    dct:isPartOf standard:sparql;
    dct:source 'https://www.w3.org/TR/sparql11-query/#rQuery'^^xsd:anyURI;
    dct:identifier '2';
    skos:prefLabel 'Query'@en;
    rdfs:isDefinedBy sparql:.

section:UpdateUnit
    a dcm:Text;
    dct:isPartOf standard:sparql;
    dct:source 'https://www.w3.org/TR/sparql11-query/#rUpdateUnit'^^xsd:anyURI;
    dct:identifier '3';
    skos:prefLabel 'Update unit'@en;
    rdfs:isDefinedBy sparql:.

section:Prologue
    a dcm:Text;
    dct:isPartOf standard:sparql;
    dct:source 'https://www.w3.org/TR/sparql11-query/#rPrologue'^^xsd:anyURI;
    dct:identifier '4';
    skos:prefLabel 'Prologue'@en;
    rdfs:isDefinedBy sparql:.

section:BaseDecl
    a dcm:Text;
    dct:isPartOf standard:sparql;
    dct:source 'https://www.w3.org/TR/sparql11-query/#rBaseDecl'^^xsd:anyURI;
    dct:identifier '5';
    skos:prefLabel 'Base declaration'@en;
    rdfs:isDefinedBy sparql:.

section:PrefixDecl
    a dcm:Text;
    dct:isPartOf standard:sparql;
    dct:source 'https://www.w3.org/TR/sparql11-query/#rPrefixDecl'^^xsd:anyURI;
    dct:identifier '6';
    skos:prefLabel 'Prefix declaration'@en;
    rdfs:isDefinedBy sparql:.

section:SelectQuery
    a dcm:Text;
    dct:isPartOf standard:sparql;
    dct:source 'https://www.w3.org/TR/sparql11-query/#rSelectQuery'^^xsd:anyURI;
    dct:identifier '7';
    skos:prefLabel 'Select query'@en;
    rdfs:isDefinedBy sparql:.

section:SubSelect
    a dcm:Text;
    dct:isPartOf standard:sparql;
    dct:source 'https://www.w3.org/TR/sparql11-query/#rSubSelect'^^xsd:anyURI;
    dct:identifier '8';
    skos:prefLabel 'Sub-select'@en;
    rdfs:isDefinedBy sparql:.

section:SelectClause
    a dcm:Text;
    dct:isPartOf standard:sparql;
    dct:source 'https://www.w3.org/TR/sparql11-query/#rSelectClause'^^xsd:anyURI;
    dct:identifier '9';
    skos:prefLabel 'Select clause'@en;
    rdfs:isDefinedBy sparql:.

section:ConstructQuery
    a dcm:Text;
    dct:isPartOf standard:sparql;
    dct:source 'https://www.w3.org/TR/sparql11-query/#rConstructQuery'^^xsd:anyURI;
    dct:identifier '10';
    skos:prefLabel 'Construct query'@en;
    rdfs:isDefinedBy sparql:.

section:DescribeQuery
    a dcm:Text;
    dct:isPartOf standard:sparql;
    dct:source 'https://www.w3.org/TR/sparql11-query/#rDescribeQuery'^^xsd:anyURI;
    dct:identifier '11';
    skos:prefLabel 'Describe query'@en;
    rdfs:isDefinedBy sparql:.

section:AskQuery
    a dcm:Text;
    dct:isPartOf standard:sparql;
    dct:source 'https://www.w3.org/TR/sparql11-query/#rAskQuery'^^xsd:anyURI;
    dct:identifier '12';
    skos:prefLabel 'Ask query'@en;
    rdfs:isDefinedBy sparql:.

section:DatasetClause
    a dcm:Text;
    dct:isPartOf standard:sparql;
    dct:source 'https://www.w3.org/TR/sparql11-query/#rDatasetClause'^^xsd:anyURI;
    dct:identifier '13';
    skos:prefLabel 'Dataset clause'@en;
    rdfs:isDefinedBy sparql:.

section:DefaultGraphClause
    a dcm:Text;
    dct:isPartOf standard:sparql;
    dct:source 'https://www.w3.org/TR/sparql11-query/#rDefaultGraphClause'^^xsd:anyURI;
    dct:identifier '14';
    skos:prefLabel 'Default graph clause'@en;
    rdfs:isDefinedBy sparql:.

section:NamedGraphClause
    a dcm:Text;
    dct:isPartOf standard:sparql;
    dct:source 'https://www.w3.org/TR/sparql11-query/#rNamedGraphClause'^^xsd:anyURI;
    dct:identifier '15';
    skos:prefLabel 'Named graph clause'@en;
    rdfs:isDefinedBy sparql:.

section:SourceSelector
    a dcm:Text;
    dct:isPartOf standard:sparql;
    dct:source 'https://www.w3.org/TR/sparql11-query/#rSourceSelector'^^xsd:anyURI;
    dct:identifier '16';
    skos:prefLabel 'Source selector'@en;
    rdfs:isDefinedBy sparql:.

section:WhereClause
    a dcm:Text;
    dct:isPartOf standard:sparql;
    dct:source 'https://www.w3.org/TR/sparql11-query/#rWhereClause'^^xsd:anyURI;
    dct:identifier '17';
    skos:prefLabel 'Where clause'@en;
    rdfs:isDefinedBy sparql:.

section:SolutionModifier
    a dcm:Text;
    dct:isPartOf standard:sparql;
    dct:source 'https://www.w3.org/TR/sparql11-query/#rSolutionModifier'^^xsd:anyURI;
    dct:identifier '18';
    skos:prefLabel 'Solution modifier'@en;
    rdfs:isDefinedBy sparql:.

section:GroupClause
    a dcm:Text;
    dct:isPartOf standard:sparql;
    dct:source 'https://www.w3.org/TR/sparql11-query/#rGroupClause'^^xsd:anyURI;
    dct:identifier '19';
    skos:prefLabel 'Group clause'@en;
    rdfs:isDefinedBy sparql:.

section:GroupCondition
    a dcm:Text;
    dct:isPartOf standard:sparql;
    dct:source 'https://www.w3.org/TR/sparql11-query/#rGroupCondition'^^xsd:anyURI;
    dct:identifier '20';
    skos:prefLabel 'Group condition'@en;
    rdfs:isDefinedBy sparql:.

section:HavingClause
    a dcm:Text;
    dct:isPartOf standard:sparql;
    dct:source 'https://www.w3.org/TR/sparql11-query/#rHavingClause'^^xsd:anyURI;
    dct:identifier '21';
    skos:prefLabel 'Having clause'@en;
    rdfs:isDefinedBy sparql:.

section:HavingCondition
    a dcm:Text;
    dct:isPartOf standard:sparql;
    dct:source 'https://www.w3.org/TR/sparql11-query/#rHavingCondition'^^xsd:anyURI;
    dct:identifier '22';
    skos:prefLabel 'Having condition'@en;
    rdfs:isDefinedBy sparql:.

section:OrderClause
    a dcm:Text;
    dct:isPartOf standard:sparql;
    dct:source 'https://www.w3.org/TR/sparql11-query/#rOrderClause'^^xsd:anyURI;
    dct:identifier '23';
    skos:prefLabel 'Order clause'@en;
    rdfs:isDefinedBy sparql:.

section:OrderCondition
    a dcm:Text;
    dct:isPartOf standard:sparql;
    dct:source 'https://www.w3.org/TR/sparql11-query/#rOrderCondition'^^xsd:anyURI;
    dct:identifier '24';
    skos:prefLabel 'Order condition'@en;
    rdfs:isDefinedBy sparql:.

section:LimitOffsetClauses
    a dcm:Text;
    dct:isPartOf standard:sparql;
    dct:source 'https://www.w3.org/TR/sparql11-query/#rLimitOffsetClauses'^^xsd:anyURI;
    dct:identifier '25';
    skos:prefLabel 'Limit/Offset clauses'@en;
    rdfs:isDefinedBy sparql:.

section:LimitClause
    a dcm:Text;
    dct:isPartOf standard:sparql;
    dct:source 'https://www.w3.org/TR/sparql11-query/#rLimitClause'^^xsd:anyURI;
    dct:identifier '26';
    skos:prefLabel 'Limit clause'@en;
    rdfs:isDefinedBy sparql:.

section:OffsetClause
    a dcm:Text;
    dct:isPartOf standard:sparql;
    dct:source 'https://www.w3.org/TR/sparql11-query/#rOffsetClause'^^xsd:anyURI;
    dct:identifier '27';
    skos:prefLabel 'Offset clause'@en;
    rdfs:isDefinedBy sparql:.

section:ValuesClause
    a dcm:Text;
    dct:isPartOf standard:sparql;
    dct:source 'https://www.w3.org/TR/sparql11-query/#rValuesClause'^^xsd:anyURI;
    dct:identifier '28';
    skos:prefLabel 'Values clause'@en;
    rdfs:isDefinedBy sparql:.

section:Update
    a dcm:Text;
    dct:isPartOf standard:sparql;
    dct:source 'https://www.w3.org/TR/sparql11-query/#rUpdate'^^xsd:anyURI;
    dct:identifier '29';
    skos:prefLabel 'Update'@en;
    rdfs:isDefinedBy sparql:.

section:Update1
    a dcm:Text;
    dct:isPartOf standard:sparql;
    dct:source 'https://www.w3.org/TR/sparql11-query/#rUpdate1'^^xsd:anyURI;
    dct:identifier '30';
    skos:prefLabel 'Update1'@en;
    rdfs:isDefinedBy sparql:.

section:Load
    a dcm:Text;
    dct:isPartOf standard:sparql;
    dct:source 'https://www.w3.org/TR/sparql11-query/#rLoad'^^xsd:anyURI;
    dct:identifier '31';
    skos:prefLabel 'Load'@en;
    rdfs:isDefinedBy sparql:.

section:Clear
    a dcm:Text;
    dct:isPartOf standard:sparql;
    dct:source 'https://www.w3.org/TR/sparql11-query/#rClear'^^xsd:anyURI;
    dct:identifier '32';
    skos:prefLabel 'Clear'@en;
    rdfs:isDefinedBy sparql:.

section:Drop
    a dcm:Text;
    dct:isPartOf standard:sparql;
    dct:source 'https://www.w3.org/TR/sparql11-query/#rDrop'^^xsd:anyURI;
    dct:identifier '33';
    skos:prefLabel 'Drop'@en;
    rdfs:isDefinedBy sparql:.

section:Create
    a dcm:Text;
    dct:isPartOf standard:sparql;
    dct:source 'https://www.w3.org/TR/sparql11-query/#rCreate'^^xsd:anyURI;
    dct:identifier '34';
    skos:prefLabel 'Create'@en;
    rdfs:isDefinedBy sparql:.

section:Add
    a dcm:Text;
    dct:isPartOf standard:sparql;
    dct:source 'https://www.w3.org/TR/sparql11-query/#rAdd'^^xsd:anyURI;
    dct:identifier '35';
    skos:prefLabel 'Add'@en;
    rdfs:isDefinedBy sparql:.

section:Move
    a dcm:Text;
    dct:isPartOf standard:sparql;
    dct:source 'https://www.w3.org/TR/sparql11-query/#rMove'^^xsd:anyURI;
    dct:identifier '36';
    skos:prefLabel 'Move'@en;
    rdfs:isDefinedBy sparql:.

section:Copy
    a dcm:Text;
    dct:isPartOf standard:sparql;
    dct:source 'https://www.w3.org/TR/sparql11-query/#rCopy'^^xsd:anyURI;
    dct:identifier '37';
    skos:prefLabel 'Copy'@en;
    rdfs:isDefinedBy sparql:.

section:InsertData
    a dcm:Text;
    dct:isPartOf standard:sparql;
    dct:source 'https://www.w3.org/TR/sparql11-query/#rInsertData'^^xsd:anyURI;
    dct:identifier '38';
    skos:prefLabel 'Insert data'@en;
    rdfs:isDefinedBy sparql:.

section:DeleteData
    a dcm:Text;
    dct:isPartOf standard:sparql;
    dct:source 'https://www.w3.org/TR/sparql11-query/#rDeleteData'^^xsd:anyURI;
    dct:identifier '39';
    skos:prefLabel 'Delete data'@en;
    rdfs:isDefinedBy sparql:.

section:DeleteWhere
    a dcm:Text;
    dct:isPartOf standard:sparql;
    dct:source 'https://www.w3.org/TR/sparql11-query/#rDeleteWhere'^^xsd:anyURI;
    dct:identifier '40';
    skos:prefLabel 'Delete where'@en;
    rdfs:isDefinedBy sparql:.

section:Modify
    a dcm:Text;
    dct:isPartOf standard:sparql;
    dct:source 'https://www.w3.org/TR/sparql11-query/#rModify'^^xsd:anyURI;
    dct:identifier '41';
    skos:prefLabel 'Modify'@en;
    rdfs:isDefinedBy sparql:.

section:DeleteClause
    a dcm:Text;
    dct:isPartOf standard:sparql;
    dct:source 'https://www.w3.org/TR/sparql11-query/#rDeleteClause'^^xsd:anyURI;
    dct:identifier '42';
    skos:prefLabel 'Delete clause'@en;
    rdfs:isDefinedBy sparql:.

section:InsertClause
    a dcm:Text;
    dct:isPartOf standard:sparql;
    dct:source 'https://www.w3.org/TR/sparql11-query/#rInsertClause'^^xsd:anyURI;
    dct:identifier '43';
    skos:prefLabel 'Insert clause'@en;
    rdfs:isDefinedBy sparql:.

section:UsingClause
    a dcm:Text;
    dct:isPartOf standard:sparql;
    dct:source 'https://www.w3.org/TR/sparql11-query/#rUsingClause'^^xsd:anyURI;
    dct:identifier '44';
    skos:prefLabel 'Using clause'@en;
    rdfs:isDefinedBy sparql:.

section:GraphOrDefault
    a dcm:Text;
    dct:isPartOf standard:sparql;
    dct:source 'https://www.w3.org/TR/sparql11-query/#rGraphOrDefault'^^xsd:anyURI;
    dct:identifier '45';
    skos:prefLabel 'Graph or default'@en;
    rdfs:isDefinedBy sparql:.

section:GraphRef
    a dcm:Text;
    dct:isPartOf standard:sparql;
    dct:source 'https://www.w3.org/TR/sparql11-query/#rGraphRef'^^xsd:anyURI;
    dct:identifier '46';
    skos:prefLabel 'Graph reference'@en;
    rdfs:isDefinedBy sparql:.

section:GraphRefAll
    a dcm:Text;
    dct:isPartOf standard:sparql;
    dct:source 'https://www.w3.org/TR/sparql11-query/#rGraphRefAll'^^xsd:anyURI;
    dct:identifier '47';
    skos:prefLabel 'Graph reference all'@en;
    rdfs:isDefinedBy sparql:.

section:QuadPattern
    a dcm:Text;
    dct:isPartOf standard:sparql;
    dct:source 'https://www.w3.org/TR/sparql11-query/#rQuadPattern'^^xsd:anyURI;
    dct:identifier '48';
    skos:prefLabel 'Quad pattern'@en;
    rdfs:isDefinedBy sparql:.

section:QuadData
    a dcm:Text;
    dct:isPartOf standard:sparql;
    dct:source 'https://www.w3.org/TR/sparql11-query/#rQuadData'^^xsd:anyURI;
    dct:identifier '49';
    skos:prefLabel 'Quad data'@en;
    rdfs:isDefinedBy sparql:.
    
section:Quads
    a dcm:Text;
    dct:isPartOf standard:sparql;
    dct:source 'https://www.w3.org/TR/sparql11-query/#rQuads'^^xsd:anyURI;
    dct:identifier '50';
    skos:prefLabel 'Quads'@en;
    rdfs:isDefinedBy sparql:.

section:QuadsNotTriples
    a dcm:Text;
    dct:isPartOf standard:sparql;
    dct:source 'https://www.w3.org/TR/sparql11-query/#rQuadsNotTriples'^^xsd:anyURI;
    dct:identifier '51';
    skos:prefLabel 'Quads (Not Triples)'@en;
    rdfs:isDefinedBy sparql:.

section:TriplesTemplate
    a dcm:Text;
    dct:isPartOf standard:sparql;
    dct:source 'https://www.w3.org/TR/sparql11-query/#rTriplesTemplate'^^xsd:anyURI;
    dct:identifier '52';
    skos:prefLabel 'Triples template'@en;
    rdfs:isDefinedBy sparql:.

section:GroupGraphPattern
    a dcm:Text;
    dct:isPartOf standard:sparql;
    dct:source 'https://www.w3.org/TR/sparql11-query/#rGroupGraphPattern'^^xsd:anyURI;
    dct:identifier '53';
    skos:prefLabel 'Group graph pattern'@en;
    rdfs:isDefinedBy sparql:.

section:GroupGraphPatternSub
    a dcm:Text;
    dct:isPartOf standard:sparql;
    dct:source 'https://www.w3.org/TR/sparql11-query/#rGroupGraphPatternSub'^^xsd:anyURI;
    dct:identifier '54';
    skos:prefLabel 'Group graph pattern sub'@en;
    rdfs:isDefinedBy sparql:.

section:TriplesBlock
    a dcm:Text;
    dct:isPartOf standard:sparql;
    dct:source 'https://www.w3.org/TR/sparql11-query/#rTriplesBlock'^^xsd:anyURI;
    dct:identifier '55';
    skos:prefLabel 'Triples block'@en;
    rdfs:isDefinedBy sparql:.

section:GraphPatternNotTriples
    a dcm:Text;
    dct:isPartOf standard:sparql;
    dct:source 'https://www.w3.org/TR/sparql11-query/#rGraphPatternNotTriples'^^xsd:anyURI;
    dct:identifier '56';
    skos:prefLabel 'Graph pattern not triples'@en;
    rdfs:isDefinedBy sparql:.

section:OptionalGraphPattern
    a dcm:Text;
    dct:isPartOf standard:sparql;
    dct:source 'https://www.w3.org/TR/sparql11-query/#rOptionalGraphPattern'^^xsd:anyURI;
    dct:identifier '57';
    skos:prefLabel 'Optional graph pattern'@en;
    rdfs:isDefinedBy sparql:.

section:GraphGraphPattern
    a dcm:Text;
    dct:isPartOf standard:sparql;
    dct:source 'https://www.w3.org/TR/sparql11-query/#rGraphGraphPattern'^^xsd:anyURI;
    dct:identifier '58';
    skos:prefLabel 'Graph graph pattern'@en;
    rdfs:isDefinedBy sparql:.

section:ServiceGraphPattern
    a dcm:Text;
    dct:isPartOf standard:sparql;
    dct:source 'https://www.w3.org/TR/sparql11-query/#rServiceGraphPattern'^^xsd:anyURI;
    dct:identifier '59';
    skos:prefLabel 'Service graph pattern'@en;
    rdfs:isDefinedBy sparql:.

section:Bind
    a dcm:Text;
    dct:isPartOf standard:sparql;
    dct:source 'https://www.w3.org/TR/sparql11-query/#rBind'^^xsd:anyURI;
    dct:identifier '60';
    skos:prefLabel 'Bind'@en;
    rdfs:isDefinedBy sparql:.

section:InlineData
    a dcm:Text;
    dct:isPartOf standard:sparql;
    dct:source 'https://www.w3.org/TR/sparql11-query/#rInlineData'^^xsd:anyURI;
    dct:identifier '61';
    skos:prefLabel 'Inline data'@en;
    rdfs:isDefinedBy sparql:.

section:DataBlock
    a dcm:Text;
    dct:isPartOf standard:sparql;
    dct:source 'https://www.w3.org/TR/sparql11-query/#rDataBlock'^^xsd:anyURI;
    dct:identifier '62';
    skos:prefLabel 'Data block'@en;
    rdfs:isDefinedBy sparql:.

section:InlineDataOneVar
    a dcm:Text;
    dct:isPartOf standard:sparql;
    dct:source 'https://www.w3.org/TR/sparql11-query/#rInlineDataOneVar'^^xsd:anyURI;
    dct:identifier '63';
    skos:prefLabel 'Inline data one variable'@en;
    rdfs:isDefinedBy sparql:.

section:InlineDataFull
    a dcm:Text;
    dct:isPartOf standard:sparql;
    dct:source 'https://www.w3.org/TR/sparql11-query/#rInlineDataFull'^^xsd:anyURI;
    dct:identifier '64';
    skos:prefLabel 'Inline data full'@en;
    rdfs:isDefinedBy sparql:.

section:DataBlockValue
    a dcm:Text;
    dct:isPartOf standard:sparql;
    dct:source 'https://www.w3.org/TR/sparql11-query/#rDataBlockValue'^^xsd:anyURI;
    dct:identifier '65';
    skos:prefLabel 'Data block value'@en;
    rdfs:isDefinedBy sparql:.

section:MinusGraphPattern
    a dcm:Text;
    dct:isPartOf standard:sparql;
    dct:source 'https://www.w3.org/TR/sparql11-query/#rMinusGraphPattern'^^xsd:anyURI;
    dct:identifier '66';
    skos:prefLabel 'Minus graph pattern'@en;
    rdfs:isDefinedBy sparql:.

section:GroupOrUnionGraphPattern
    a dcm:Text;
    dct:isPartOf standard:sparql;
    dct:source 'https://www.w3.org/TR/sparql11-query/#rGroupOrUnionGraphPattern'^^xsd:anyURI;
    dct:identifier '67';
    skos:prefLabel 'Group or union graph pattern'@en;
    rdfs:isDefinedBy sparql:.

section:Filter
    a dcm:Text;
    dct:isPartOf standard:sparql;
    dct:source 'https://www.w3.org/TR/sparql11-query/#rFilter'^^xsd:anyURI;
    dct:identifier '68';
    skos:prefLabel 'Filter'@en;
    rdfs:isDefinedBy sparql:.

section:Constraint
    a dcm:Text;
    dct:isPartOf standard:sparql;
    dct:source 'https://www.w3.org/TR/sparql11-query/#rConstraint'^^xsd:anyURI;
    dct:identifier '69';
    skos:prefLabel 'Constraint'@en;
    rdfs:isDefinedBy sparql:.

section:FunctionCall
    a dcm:Text;
    dct:isPartOf standard:sparql;
    dct:source 'https://www.w3.org/TR/sparql11-query/#rFunctionCall'^^xsd:anyURI;
    dct:identifier '70';
    skos:prefLabel 'Function call'@en;
    rdfs:isDefinedBy sparql:.

section:ArgList
    a dcm:Text;
    dct:isPartOf standard:sparql;
    dct:source 'https://www.w3.org/TR/sparql11-query/#rArgList'^^xsd:anyURI;
    dct:identifier '71';
    skos:prefLabel 'Argument list'@en;
    rdfs:isDefinedBy sparql:.

section:ExpressionList
    a dcm:Text;
    dct:isPartOf standard:sparql;
    dct:source 'https://www.w3.org/TR/sparql11-query/#rExpressionList'^^xsd:anyURI;
    dct:identifier '72';
    skos:prefLabel 'Expression list'@en;
    rdfs:isDefinedBy sparql:.

section:ConstructTemplate
    a dcm:Text;
    dct:isPartOf standard:sparql;
    dct:source 'https://www.w3.org/TR/sparql11-query/#rConstructTemplate'^^xsd:anyURI;
    dct:identifier '73';
    skos:prefLabel 'Construct template'@en;
    rdfs:isDefinedBy sparql:.

section:ConstructTriples
    a dcm:Text;
    dct:isPartOf standard:sparql;
    dct:source 'https://www.w3.org/TR/sparql11-query/#rConstructTriples'^^xsd:anyURI;
    dct:identifier '74';
    skos:prefLabel 'Construct triples'@en;
    rdfs:isDefinedBy sparql:.

section:TriplesSameSubject
    a dcm:Text;
    dct:isPartOf standard:sparql;
    dct:source 'https://www.w3.org/TR/sparql11-query/#rTriplesSameSubject'^^xsd:anyURI;
    dct:identifier '75';
    skos:prefLabel 'Triples same subject'@en;
    rdfs:isDefinedBy sparql:.

section:PropertyList
    a dcm:Text;
    dct:isPartOf standard:sparql;
    dct:source 'https://www.w3.org/TR/sparql11-query/#rPropertyList'^^xsd:anyURI;
    dct:identifier '76';
    skos:prefLabel 'Property list'@en;
    rdfs:isDefinedBy sparql:.

section:PropertyListNotEmpty
    a dcm:Text;
    dct:isPartOf standard:sparql;
    dct:source 'https://www.w3.org/TR/sparql11-query/#rPropertyListNotEmpty'^^xsd:anyURI;
    dct:identifier '77';
    skos:prefLabel 'Property list not empty'@en;
    rdfs:isDefinedBy sparql:.

section:Verb
    a dcm:Text;
    dct:isPartOf standard:sparql;
    dct:source 'https://www.w3.org/TR/sparql11-query/#rVerb'^^xsd:anyURI;
    dct:identifier '78';
    skos:prefLabel 'Verb'@en;
    rdfs:isDefinedBy sparql:.

section:ObjectList
    a dcm:Text;
    dct:isPartOf standard:sparql;
    dct:source 'https://www.w3.org/TR/sparql11-query/#rObjectList'^^xsd:anyURI;
    dct:identifier '79';
    skos:prefLabel 'Object list'@en;
    rdfs:isDefinedBy sparql:.

section:Object
    a dcm:Text;
    dct:isPartOf standard:sparql;
    dct:source 'https://www.w3.org/TR/sparql11-query/#rObject'^^xsd:anyURI;
    dct:identifier '80';
    skos:prefLabel 'Object'@en;
    rdfs:isDefinedBy sparql:.

section:TriplesSameSubjectPath
    a dcm:Text;
    dct:isPartOf standard:sparql;
    dct:source 'https://www.w3.org/TR/sparql11-query/#rTriplesSameSubjectPath'^^xsd:anyURI;
    dct:identifier '81';
    skos:prefLabel 'Triples same subject path'@en;
    rdfs:isDefinedBy sparql:.

section:PropertyListPath
    a dcm:Text;
    dct:isPartOf standard:sparql;
    dct:source 'https://www.w3.org/TR/sparql11-query/#rPropertyListPath'^^xsd:anyURI;
    dct:identifier '82';
    skos:prefLabel 'Property list path'@en;
    rdfs:isDefinedBy sparql:.

section:PropertyListPathNotEmpty
    a dcm:Text;
    dct:isPartOf standard:sparql;
    dct:source 'https://www.w3.org/TR/sparql11-query/#rPropertyListPathNotEmpty'^^xsd:anyURI;
    dct:identifier '83';
    skos:prefLabel 'Property list path not empty'@en;
    rdfs:isDefinedBy sparql:.

section:VerbPath
    a dcm:Text;
    dct:isPartOf standard:sparql;
    dct:source 'https://www.w3.org/TR/sparql11-query/#rVerbPath'^^xsd:anyURI;
    dct:identifier '84';
    skos:prefLabel 'Verb path'@en;
    rdfs:isDefinedBy sparql:.

section:VerbSimple
    a dcm:Text;
    dct:isPartOf standard:sparql;
    dct:source 'https://www.w3.org/TR/sparql11-query/#rVerbSimple'^^xsd:anyURI;
    dct:identifier '85';
    skos:prefLabel 'Verb simple'@en;
    rdfs:isDefinedBy sparql:.

section:ObjectListPath
    a dcm:Text;
    dct:isPartOf standard:sparql;
    dct:source 'https://www.w3.org/TR/sparql11-query/#rObjectListPath'^^xsd:anyURI;
    dct:identifier '86';
    skos:prefLabel 'Object list path'@en;
    rdfs:isDefinedBy sparql:.

section:ObjectPath
    a dcm:Text;
    dct:isPartOf standard:sparql;
    dct:source 'https://www.w3.org/TR/sparql11-query/#rObjectPath'^^xsd:anyURI;
    dct:identifier '87';
    skos:prefLabel 'Object path'@en;
    rdfs:isDefinedBy sparql:.

section:Path
    a dcm:Text;
    dct:isPartOf standard:sparql;
    dct:source 'https://www.w3.org/TR/sparql11-query/#rPath'^^xsd:anyURI;
    dct:identifier '88';
    skos:prefLabel 'Path'@en;
    rdfs:isDefinedBy sparql:.

section:PathAlternative
    a dcm:Text;
    dct:isPartOf standard:sparql;
    dct:source 'https://www.w3.org/TR/sparql11-query/#rPathAlternative'^^xsd:anyURI;
    dct:identifier '89';
    skos:prefLabel 'Path alternative'@en;
    rdfs:isDefinedBy sparql:.

section:PathSequence
    a dcm:Text;
    dct:isPartOf standard:sparql;
    dct:source 'https://www.w3.org/TR/sparql11-query/#rPathSequence'^^xsd:anyURI;
    dct:identifier '90';
    skos:prefLabel 'Path sequence'@en;
    rdfs:isDefinedBy sparql:.

section:PathElt
    a dcm:Text;
    dct:isPartOf standard:sparql;
    dct:source 'https://www.w3.org/TR/sparql11-query/#rPathElt'^^xsd:anyURI;
    dct:identifier '91';
    skos:prefLabel 'Path element'@en;
    rdfs:isDefinedBy sparql:.

section:PathEltOrInverse
    a dcm:Text;
    dct:isPartOf standard:sparql;
    dct:source 'https://www.w3.org/TR/sparql11-query/#rPathEltOrInverse'^^xsd:anyURI;
    dct:identifier '92';
    skos:prefLabel 'Path element or inverse'@en;
    rdfs:isDefinedBy sparql:.

section:PathMod
    a dcm:Text;
    dct:isPartOf standard:sparql;
    dct:source 'https://www.w3.org/TR/sparql11-query/#rPathMod'^^xsd:anyURI;
    dct:identifier '93';
    skos:prefLabel 'Path modifier'@en;
    rdfs:isDefinedBy sparql:.

section:PathPrimary
    a dcm:Text;
    dct:isPartOf standard:sparql;
    dct:source 'https://www.w3.org/TR/sparql11-query/#rPathPrimary'^^xsd:anyURI;
    dct:identifier '94';
    skos:prefLabel 'Path primary'@en;
    rdfs:isDefinedBy sparql:.

section:PathNegatedPropertySet
    a dcm:Text;
    dct:isPartOf standard:sparql;
    dct:source 'https://www.w3.org/TR/sparql11-query/#rPathNegatedPropertySet'^^xsd:anyURI;
    dct:identifier '95';
    skos:prefLabel 'Path negated property set'@en;
    rdfs:isDefinedBy sparql:.

section:PathOneInPropertySet
    a dcm:Text;
    dct:isPartOf standard:sparql;
    dct:source 'https://www.w3.org/TR/sparql11-query/#rPathOneInPropertySet'^^xsd:anyURI;
    dct:identifier '96';
    skos:prefLabel 'Path one in property set'@en;
    rdfs:isDefinedBy sparql:.

section:Integer
    a dcm:Text;
    dct:isPartOf standard:sparql;
    dct:source 'https://www.w3.org/TR/sparql11-query/#rInteger'^^xsd:anyURI;
    dct:identifier '97';
    skos:prefLabel 'Integer'@en;
    rdfs:isDefinedBy sparql:.

section:TriplesNode
    a dcm:Text;
    dct:isPartOf standard:sparql;
    dct:source 'https://www.w3.org/TR/sparql11-query/#rTriplesNode'^^xsd:anyURI;
    dct:identifier '98';
    skos:prefLabel 'Triples node'@en;
    rdfs:isDefinedBy sparql:.

section:BlankNodePropertyList
    a dcm:Text;
    dct:isPartOf standard:sparql;
    dct:source 'https://www.w3.org/TR/sparql11-query/#rBlankNodePropertyList'^^xsd:anyURI;
    dct:identifier '99';
    skos:prefLabel 'Blank node property list'@en;
    rdfs:isDefinedBy sparql:.

section:TriplesNodePath
    a dcm:Text;
    dct:isPartOf standard:sparql;
    dct:source 'https://www.w3.org/TR/sparql11-query/#rTriplesNodePath'^^xsd:anyURI;
    dct:identifier '100';
    skos:prefLabel 'Triples node path'@en;
    rdfs:isDefinedBy sparql:.

section:ExistsFunc
    a dcm:Text;
    dct:isPartOf standard:sparql;
    dct:source 'https://www.w3.org/TR/sparql11-query/#rExistsFunc'^^xsd:anyURI;
    dct:identifier '125';
    skos:prefLabel 'Exists function'@en;
    rdfs:isDefinedBy sparql:.

section:NotExistsFunc
    a dcm:Text;
    dct:isPartOf standard:sparql;
    dct:source 'https://www.w3.org/TR/sparql11-query/#rNotExistsFunc'^^xsd:anyURI;
    dct:identifier '126';
    skos:prefLabel 'Not exists function'@en;
    rdfs:isDefinedBy sparql:.

section:Aggregate
    a dcm:Text;
    dct:isPartOf standard:sparql;
    dct:source 'https://www.w3.org/TR/sparql11-query/#rAggregate'^^xsd:anyURI;
    dct:identifier '127';
    skos:prefLabel 'Aggregate'@en;
    rdfs:isDefinedBy sparql:.

section:iriOrFunction
    a dcm:Text;
    dct:isPartOf standard:sparql;
    dct:source 'https://www.w3.org/TR/sparql11-query/#ririOrFunction'^^xsd:anyURI;
    dct:identifier '128';
    skos:prefLabel 'IRI or function'@en;
    rdfs:isDefinedBy sparql:.

section:RDFLiteral
    a dcm:Text;
    dct:isPartOf standard:sparql;
    dct:source 'https://www.w3.org/TR/sparql11-query/#rRDFLiteral'^^xsd:anyURI;
    dct:identifier '129';
    skos:prefLabel 'RDF literal'@en;
    rdfs:isDefinedBy sparql:.

section:NumericLiteral
    a dcm:Text;
    dct:isPartOf standard:sparql;
    dct:source 'https://www.w3.org/TR/sparql11-query/#rNumericLiteral'^^xsd:anyURI;
    dct:identifier '130';
    skos:prefLabel 'Numeric literal'@en;
    rdfs:isDefinedBy sparql:.

section:NumericLiteralUnsigned
    a dcm:Text;
    dct:isPartOf standard:sparql;
    dct:source 'https://www.w3.org/TR/sparql11-query/#rNumericLiteralUnsigned'^^xsd:anyURI;
    dct:identifier '131';
    skos:prefLabel 'Unsigned numeric literal'@en;
    rdfs:isDefinedBy sparql:.

section:NumericLiteralPositive
    a dcm:Text;
    dct:isPartOf standard:sparql;
    dct:source 'https://www.w3.org/TR/sparql11-query/#rNumericLiteralPositive'^^xsd:anyURI;
    dct:identifier '132';
    skos:prefLabel 'Positive numeric literal'@en;
    rdfs:isDefinedBy sparql:.

section:NumericLiteralNegative
    a dcm:Text;
    dct:isPartOf standard:sparql;
    dct:source 'https://www.w3.org/TR/sparql11-query/#rNumericLiteralNegative'^^xsd:anyURI;
    dct:identifier '133';
    skos:prefLabel 'Negative numeric literal'@en;
    rdfs:isDefinedBy sparql:.

section:BooleanLiteral
    a dcm:Text;
    dct:isPartOf standard:sparql;
    dct:source 'https://www.w3.org/TR/sparql11-query/#rBooleanLiteral'^^xsd:anyURI;
    dct:identifier '134';
    skos:prefLabel 'Boolean literal'@en;
    rdfs:isDefinedBy sparql:.

section:String
    a dcm:Text;
    dct:isPartOf standard:sparql;
    dct:source 'https://www.w3.org/TR/sparql11-query/#rString'^^xsd:anyURI;
    dct:identifier '135';
    skos:prefLabel 'String'@en;
    rdfs:isDefinedBy sparql:.

section:iri
    a dcm:Text;
    dct:isPartOf standard:sparql;
    dct:source 'https://www.w3.org/TR/sparql11-query/#riri'^^xsd:anyURI;
    dct:identifier '136';
    skos:prefLabel 'IRI'@en;
    rdfs:isDefinedBy sparql:.

section:PrefixedName
    a dcm:Text;
    dct:isPartOf standard:sparql;
    dct:source 'https://www.w3.org/TR/sparql11-query/#rPrefixedName'^^xsd:anyURI;
    dct:identifier '137';
    skos:prefLabel 'Prefixed name'@en;
    rdfs:isDefinedBy sparql:.

section:BlankNode
    a dcm:Text;
    dct:isPartOf standard:sparql;
    dct:source 'https://www.w3.org/TR/sparql11-query/#rBlankNode'^^xsd:anyURI;
    dct:identifier '138';
    skos:prefLabel 'Blank node'@en;
    rdfs:isDefinedBy sparql:.

section:IRIREF
    a dcm:Text;
    dct:isPartOf standard:sparql;
    dct:source 'https://www.w3.org/TR/sparql11-query/#rIRIREF'^^xsd:anyURI;
    dct:identifier '139';
    skos:prefLabel 'IRI reference'@en;
    rdfs:isDefinedBy sparql:.

section:PNAME_NS
    a dcm:Text;
    dct:isPartOf standard:sparql;
    dct:source 'https://www.w3.org/TR/sparql11-query/#rPNAME_NS'^^xsd:anyURI;
    dct:identifier '140';
    skos:prefLabel 'Prefix name namespace'@en;
    rdfs:isDefinedBy sparql:.

section:PNAME_LN
    a dcm:Text;
    dct:isPartOf standard:sparql;
    dct:source 'https://www.w3.org/TR/sparql11-query/#rPNAME_LN'^^xsd:anyURI;
    dct:identifier '141';
    skos:prefLabel 'Prefix name local part'@en;
    rdfs:isDefinedBy sparql:.

section:BLANK_NODE_LABEL
    a dcm:Text;
    dct:isPartOf standard:sparql;
    dct:source 'https://www.w3.org/TR/sparql11-query/#rBLANK_NODE_LABEL'^^xsd:anyURI;
    dct:identifier '142';
    skos:prefLabel 'Blank node label'@en;
    rdfs:isDefinedBy sparql:.

section:VAR1
    a dcm:Text;
    dct:isPartOf standard:sparql;
    dct:source 'https://www.w3.org/TR/sparql11-query/#rVAR1'^^xsd:anyURI;
    dct:identifier '143';
    skos:prefLabel 'Variable type 1'@en;
    rdfs:isDefinedBy sparql:.

section:VAR2
    a dcm:Text;
    dct:isPartOf standard:sparql;
    dct:source 'https://www.w3.org/TR/sparql11-query/#rVAR2'^^xsd:anyURI;
    dct:identifier '144';
    skos:prefLabel 'Variable type 2'@en;
    rdfs:isDefinedBy sparql:.

section:LANGTAG
    a dcm:Text;
    dct:isPartOf standard:sparql;
    dct:source 'https://www.w3.org/TR/sparql11-query/#rLANGTAG'^^xsd:anyURI;
    dct:identifier '145';
    skos:prefLabel 'Language tag'@en;
    rdfs:isDefinedBy sparql:.


section:INTEGER
    a dcm:Text;
    dct:isPartOf standard:sparql;
    dct:source 'https://www.w3.org/TR/sparql11-query/#rINTEGER'^^xsd:anyURI;
    dct:identifier '146';
    skos:prefLabel 'Integer'@en;
    rdfs:isDefinedBy sparql:.

section:DECIMAL
    a dcm:Text;
    dct:isPartOf standard:sparql;
    dct:source 'https://www.w3.org/TR/sparql11-query/#rDECIMAL'^^xsd:anyURI;
    dct:identifier '147';
    skos:prefLabel 'Decimal'@en;
    rdfs:isDefinedBy sparql:.

section:DOUBLE
    a dcm:Text;
    dct:isPartOf standard:sparql;
    dct:source 'https://www.w3.org/TR/sparql11-query/#rDOUBLE'^^xsd:anyURI;
    dct:identifier '148';
    skos:prefLabel 'Double'@en;
    rdfs:isDefinedBy sparql:.

section:INTEGER_POSITIVE
    a dcm:Text;
    dct:isPartOf standard:sparql;
    dct:source 'https://www.w3.org/TR/sparql11-query/#rINTEGER_POSITIVE'^^xsd:anyURI;
    dct:identifier '149';
    skos:prefLabel 'Positive Integer'@en;
    rdfs:isDefinedBy sparql:.

section:DECIMAL_POSITIVE
    a dcm:Text;
    dct:isPartOf standard:sparql;
    dct:source 'https://www.w3.org/TR/sparql11-query/#rDECIMAL_POSITIVE'^^xsd:anyURI;
    dct:identifier '150';
    skos:prefLabel 'Positive Decimal'@en;
    rdfs:isDefinedBy sparql:.

section:DOUBLE_POSITIVE
    a dcm:Text;
    dct:isPartOf standard:sparql;
    dct:source 'https://www.w3.org/TR/sparql11-query/#rDOUBLE_POSITIVE'^^xsd:anyURI;
    dct:identifier '151';
    skos:prefLabel 'Positive Double'@en;
    rdfs:isDefinedBy sparql:.

section:INTEGER_NEGATIVE
    a dcm:Text;
    dct:isPartOf standard:sparql;
    dct:source 'https://www.w3.org/TR/sparql11-query/#rINTEGER_NEGATIVE'^^xsd:anyURI;
    dct:identifier '152';
    skos:prefLabel 'Negative Integer'@en;
    rdfs:isDefinedBy sparql:.

section:DECIMAL_NEGATIVE
    a dcm:Text;
    dct:isPartOf standard:sparql;
    dct:source 'https://www.w3.org/TR/sparql11-query/#rDECIMAL_NEGATIVE'^^xsd:anyURI;
    dct:identifier '153';
    skos:prefLabel 'Negative Decimal'@en;
    rdfs:isDefinedBy sparql:.

section:DOUBLE_NEGATIVE
    a dcm:Text;
    dct:isPartOf standard:sparql;
    dct:source 'https://www.w3.org/TR/sparql11-query/#rDOUBLE_NEGATIVE'^^xsd:anyURI;
    dct:identifier '154';
    skos:prefLabel 'Negative Double'@en;
    rdfs:isDefinedBy sparql:.

section:EXPONENT
    a dcm:Text;
    dct:isPartOf standard:sparql;
    dct:source 'https://www.w3.org/TR/sparql11-query/#rEXPONENT'^^xsd:anyURI;
    dct:identifier '155';
    skos:prefLabel 'Exponent'@en;
    rdfs:isDefinedBy sparql:.

section:STRING_LITERAL1
    a dcm:Text;
    dct:isPartOf standard:sparql;
    dct:source 'https://www.w3.org/TR/sparql11-query/#rSTRING_LITERAL1'^^xsd:anyURI;
    dct:identifier '156';
    skos:prefLabel 'String Literal 1'@en;
    rdfs:isDefinedBy sparql:.

section:STRING_LITERAL2
    a dcm:Text;
    dct:isPartOf standard:sparql;
    dct:source 'https://www.w3.org/TR/sparql11-query/#rSTRING_LITERAL2'^^xsd:anyURI;
    dct:identifier '157';
    skos:prefLabel 'String Literal 2'@en;
    rdfs:isDefinedBy sparql:.

section:STRING_LITERAL_LONG1
    a dcm:Text;
    dct:isPartOf standard:sparql;
    dct:source 'https://www.w3.org/TR/sparql11-query/#rSTRING_LITERAL_LONG1'^^xsd:anyURI;
    dct:identifier '158';
    skos:prefLabel 'Long String Literal 1'@en;
    rdfs:isDefinedBy sparql:.

section:STRING_LITERAL_LONG2
    a dcm:Text;
    dct:isPartOf standard:sparql;
    dct:source 'https://www.w3.org/TR/sparql11-query/#rSTRING_LITERAL_LONG2'^^xsd:anyURI;
    dct:identifier '159';
    skos:prefLabel 'Long String Literal 2'@en;
    rdfs:isDefinedBy sparql:.

section:ECHAR
    a dcm:Text;
    dct:isPartOf standard:sparql;
    dct:source 'https://www.w3.org/TR/sparql11-query/#rECHAR'^^xsd:anyURI;
    dct:identifier '160';
    skos:prefLabel 'Escape Character'@en;
    rdfs:isDefinedBy sparql:.

section:NIL
    a dcm:Text;
    dct:isPartOf standard:sparql;
    dct:source 'https://www.w3.org/TR/sparql11-query/#rNIL'^^xsd:anyURI;
    dct:identifier '161';
    skos:prefLabel 'Nil'@en;
    rdfs:isDefinedBy sparql:.

section:WS
    a dcm:Text;
    dct:isPartOf standard:sparql;
    dct:source 'https://www.w3.org/TR/sparql11-query/#rWS'^^xsd:anyURI;
    dct:identifier '162';
    skos:prefLabel 'Whitespace'@en;
    rdfs:isDefinedBy sparql:.

section:ANON
    a dcm:Text;
    dct:isPartOf standard:sparql;
    dct:source 'https://www.w3.org/TR/sparql11-query/#rANON'^^xsd:anyURI;
    dct:identifier '163';
    skos:prefLabel 'Anonymous'@en;
    rdfs:isDefinedBy sparql:.

section:PN_CHARS_BASE
    a dcm:Text;
    dct:isPartOf standard:sparql;
    dct:source 'https://www.w3.org/TR/sparql11-query/#rPN_CHARS_BASE'^^xsd:anyURI;
    dct:identifier '164';
    skos:prefLabel 'PN Characters Base'@en;
    rdfs:isDefinedBy sparql:.

section:PN_CHARS_U
    a dcm:Text;
    dct:isPartOf standard:sparql;
    dct:source 'https://www.w3.org/TR/sparql11-query/#rPN_CHARS_U'^^xsd:anyURI;
    dct:identifier '165';
    skos:prefLabel 'PN Characters U'@en;
    rdfs:isDefinedBy sparql:.

section:VARNAME
    a dcm:Text;
    dct:isPartOf standard:sparql;
    dct:source 'https://www.w3.org/TR/sparql11-query/#rVARNAME'^^xsd:anyURI;
    dct:identifier '166';
    skos:prefLabel 'Variable Name'@en;
    rdfs:isDefinedBy sparql:.

section:PN_CHARS
    a dcm:Text;
    dct:isPartOf standard:sparql;
    dct:source 'https://www.w3.org/TR/sparql11-query/#rPN_CHARS'^^xsd:anyURI;
    dct:identifier '167';
    skos:prefLabel 'PN Characters'@en;
    rdfs:isDefinedBy sparql:.

section:PN_PREFIX
    a dcm:Text;
    dct:isPartOf standard:sparql;
    dct:source 'https://www.w3.org/TR/sparql11-query/#rPN_PREFIX'^^xsd:anyURI;
    dct:identifier '168';
    skos:prefLabel 'PN Prefix'@en;
    rdfs:isDefinedBy sparql:.

section:PN_LOCAL
    a dcm:Text;
    dct:isPartOf standard:sparql;
    dct:source 'https://www.w3.org/TR/sparql11-query/#rPN_LOCAL'^^xsd:anyURI;
    dct:identifier '169';
    skos:prefLabel 'PN Local'@en;
    rdfs:isDefinedBy sparql:.

section:PLX
    a dcm:Text;
    dct:isPartOf standard:sparql;
    dct:source 'https://www.w3.org/TR/sparql11-query/#rPLX'^^xsd:anyURI;
    dct:identifier '170';
    skos:prefLabel 'PLX'@en;
    rdfs:isDefinedBy sparql:.

section:PERCENT
    a dcm:Text;
    dct:isPartOf standard:sparql;
    dct:source 'https://www.w3.org/TR/sparql11-query/#rPERCENT'^^xsd:anyURI;
    dct:identifier '171';
    skos:prefLabel 'Percent'@en;
    rdfs:isDefinedBy sparql:.

section:HEX
    a dcm:Text;
    dct:isPartOf standard:sparql;
    dct:source 'https://www.w3.org/TR/sparql11-query/#rHEX'^^xsd:anyURI;
    dct:identifier '172';
    skos:prefLabel 'Hexadecimal'@en;
    rdfs:isDefinedBy sparql:.

section:PN_LOCAL_ESC
    a dcm:Text;
    dct:isPartOf standard:sparql;
    dct:source 'https://www.w3.org/TR/sparql11-query/#rPN_LOCAL_ESC'^^xsd:anyURI;
    dct:identifier '173';
    skos:prefLabel 'PN Local Escape'@en;
    rdfs:isDefinedBy sparql:.
 
    
### SPARQL voc ###

### Classes ###

sparql:AbstractSyntaxTree
  a owl:Class;
  dct:conformsTo section:AbstractSyntaxTree;
  skos:definition 'Represents a tree that models a SPARQL query unit. It consists of an hierarchy of connected nodes that model the structure and syntax of a SPARQL query unit.'@en;
  skos:prefLabel 'Abstract Syntax Tree'@en;
  rdfs:isDefinedBy sparql:.

sparql:Node
  a owl:Class;
  dct:conformsTo section:Node;
  skos:definition 'Represents an object within the SPARQL abstract syntax tree.'@en;
  skos:prefLabel 'Node'@en;
  rdfs:isDefinedBy sparql:.

sparql:NonTerminalNode
  a owl:Class;
  rdfs:subClassOf sparql:Node;
  dct:conformsTo section:StructuralNode;
  skos:definition 'Represents a structural node in the SPARQL abstract syntax tree.'@en;
  skos:prefLabel 'Non-terminal node'@en;
  rdfs:isDefinedBy sparql:.

sparql:TerminalNode
  a owl:Class;
  rdfs:subClassOf sparql:Node;  
  dct:conformsTo section:TerminalNode;
  skos:definition 'Represents a syntactical node in the SPARQL abstract syntax tree, i.e. a keyword or symbol.'@en;
  skos:prefLabel 'Terminal node'@en;
  skos:example '''"SELECT", "FILTER", "?s" or "<https://example.org>"''';  
  rdfs:isDefinedBy sparql:.

sparql:Keyword
  a owl:Class;
  rdfs:subClassOf sparql:TerminalNode;  
  dct:conformsTo section:Keyword;
  skos:definition 'Represents a keyword in the SPARQL syntax.'@en;
  skos:prefLabel 'Keyword'@en;
  skos:example '''"SELECT" or "FILTER"''';
  rdfs:isDefinedBy sparql:.

sparql:Symbol
  a owl:Class;
  rdfs:subClassOf sparql:TerminalNode;  
  dct:conformsTo section:Symbol;
  skos:definition 'Represents a meaningful token in the SPARQL syntax that does not have any underlying components.'@en;
  skos:prefLabel 'Symbol'@en;
  skos:example '''"*" or "+"''';  
  rdfs:isDefinedBy sparql:.

sparql:SymbolSequence
  a owl:Class;
  rdfs:subClassOf sparql:TerminalNode;  
  dct:conformsTo section:SymbolSequence;
  skos:definition 'Represents a meaningful token in the SPARQL syntax that can be broken down into underlying components like symbols and character sequences.'@en;
  skos:prefLabel 'Symbol sequence'@en;
  skos:example '''"?s" or "<https://example.org>"''';
  rdfs:isDefinedBy sparql:.

sparql:CharacterSequence
  a owl:Class;
  rdfs:subClassOf sparql:TerminalNode;  
  dct:conformsTo section:CharacterSequence;
  skos:definition 'Represents a group of characters that on its own does not have meaning within the SPARQL syntax. A character sequence is always part of a symbol sequence.'@en;
  skos:prefLabel 'Character sequence'@en;
  skos:example '''"s" in "?s" or "https://example.org" in "<https://example.org>"''';
  rdfs:isDefinedBy sparql:.
  
sparql:QueryUnit
  a owl:Class;
  rdfs:subClassOf sparql:NonTerminalNode;
  dct:conformsTo section:QueryUnit;
  skos:definition "Represents the unit of a query in SPARQL. It is the root node in the SPARQL abstract syntax tree."@en;
  skos:prefLabel "Query Unit"@en;
  rdfs:isDefinedBy sparql:.

sparql:Query
  a owl:Class;
  rdfs:subClassOf sparql:NonTerminalNode;
  dct:conformsTo section:Query;
  skos:definition "Represents a SPARQL query with various forms such as Select, Construct, Describe, and Ask."@en;
  skos:prefLabel "Query"@en;
  rdfs:isDefinedBy sparql:.

sparql:UpdateUnit
  a owl:Class;
  rdfs:subClassOf sparql:NonTerminalNode;  
  dct:conformsTo section:UpdateUnit;
  skos:definition "Represents the unit of an update in SPARQL."@en;
  skos:prefLabel "Update Unit"@en;
  rdfs:isDefinedBy sparql:.

sparql:Prologue
  a owl:Class;
  rdfs:subClassOf sparql:NonTerminalNode;
  dct:conformsTo section:Prologue;
  skos:definition "Represents the prologue of a SPARQL query, which includes base and prefix declarations."@en;
  skos:prefLabel "Prologue"@en;
  rdfs:isDefinedBy sparql:.

sparql:BaseDecl
  a owl:Class;
  rdfs:subClassOf sparql:NonTerminalNode;
  dct:conformsTo section:BaseDecl;
  skos:definition "Represents a BASE declaration with an IRI in SPARQL."@en;
  skos:prefLabel "Base Declaration"@en;
  rdfs:isDefinedBy sparql:.
  
sparql:Base
  a owl:Class;
  rdfs:subClassOf sparql:Keyword;
  dct:conformsTo section:Base;
  skos:definition "Represents the BASE keyword in the abstract syntax tree of SPARQL."@en;
  skos:prefLabel "BASE keyword"@en;
  sparql:syntax 'BASE';
  rdfs:isDefinedBy sparql:.

sparql:Prefix
  a owl:Class;
  rdfs:subClassOf sparql:Keyword;
  dct:conformsTo section:Prefix;
  skos:definition "Represents the PREFIX keyword in the abstract syntax tree of SPARQL."@en;
  skos:prefLabel "PREFIX keyword"@en;
  sparql:syntax 'PREFIX';
  rdfs:isDefinedBy sparql:.

sparql:ArgList
  a owl:Class;
  rdfs:subClassOf sparql:NonTerminalNode;
  dct:conformsTo section:ArgList;
  skos:definition "Represents an ArgList in SPARQL."@en;
  skos:prefLabel "ArgList"@en;
  rdfs:isDefinedBy sparql:.
  
sparql:IRI
  a owl:Class;
  rdfs:subClassOf sparql:NonTerminalNode;
  dct:conformsTo section:IRI;
  skos:definition "Represents an IRI in SPARQL."@en;
  skos:prefLabel "IRI"@en;
  rdfs:isDefinedBy sparql:.

sparql:IRIRef
  a owl:Class;
  rdfs:subClassOf sparql:SymbolSequence;
  dct:conformsTo section:IRIRef;
  skos:definition "Represents an IRIRef symbol sequence in the abstract syntax tree of SPARQL."@en;
  skos:prefLabel "IRI reference"@en;
  rdfs:isDefinedBy sparql:.

sparql:Nil
  a owl:Class;
  rdfs:subClassOf sparql:SymbolSequence;
  dct:conformsTo section:Nil;
  skos:definition "Represents a Nil symbol sequence in the abstract syntax tree of SPARQL."@en;
  skos:prefLabel "Nil"@en;
  rdfs:isDefinedBy sparql:.

sparql:WS
  a owl:Class;
  rdfs:subClassOf sparql:CharacterSequence;
  dct:conformsTo section:WS;
  skos:definition "Represents a WS character sequence in the abstract syntax tree of SPARQL."@en;
  skos:prefLabel "WS"@en;
  rdfs:isDefinedBy sparql:.

sparql:PN_CHARS_BASE
  a owl:Class;
  rdfs:subClassOf sparql:CharacterSequence;
  dct:conformsTo section:PN_CHARS_BASE;
  skos:definition "Represents a PN_CHARS_BASE character sequence in the abstract syntax tree of SPARQL."@en;
  skos:prefLabel "PN_CHARS_BASE"@en;
  rdfs:isDefinedBy sparql:.

sparql:PN_CHARS_U
  a owl:Class;
  rdfs:subClassOf sparql:SymbolSequence;
  dct:conformsTo section:PN_CHARS_U;
  skos:definition "Represents a PN_CHARS_U symbol sequence in the abstract syntax tree of SPARQL."@en;
  skos:prefLabel "PN_CHARS_U"@en;
  rdfs:isDefinedBy sparql:.

sparql:PN_CHARS
  a owl:Class;
  rdfs:subClassOf sparql:SymbolSequence;
  dct:conformsTo section:PN_CHARS;
  skos:definition "Represents a PN_CHARS symbol sequence in the abstract syntax tree of SPARQL."@en;
  skos:prefLabel "PN_CHARS"@en;
  rdfs:isDefinedBy sparql:.

sparql:PLX
  a owl:Class;
  rdfs:subClassOf sparql:SymbolSequence;
  dct:conformsTo section:PLX;
  skos:definition "Represents a PLX symbol sequence in the abstract syntax tree of SPARQL."@en;
  skos:prefLabel "PLX"@en;
  rdfs:isDefinedBy sparql:.

sparql:PERCENT
  a owl:Class;
  rdfs:subClassOf sparql:SymbolSequence;
  dct:conformsTo section:PERCENT;
  skos:definition "Represents a PERCENT symbol sequence in the abstract syntax tree of SPARQL."@en;
  skos:prefLabel "PERCENT"@en;
  rdfs:isDefinedBy sparql:.

sparql:HEX
  a owl:Class;
  rdfs:subClassOf sparql:CharacterSequence;
  dct:conformsTo section:HEX;
  skos:definition "Represents a HEX character sequence in the abstract syntax tree of SPARQL."@en;
  skos:prefLabel "HEX"@en;
  rdfs:isDefinedBy sparql:.
  
sparql:PrefixedName
  a owl:Class;
  rdfs:subClassOf sparql:NonTerminalNode;
  dct:conformsTo section:PrefixedName;
  skos:definition "Represents a prefixed name clause in the abstract syntax tree of SPARQL."@en;
  skos:prefLabel "Prefixed name"@en;
  rdfs:isDefinedBy sparql:.

sparql:PrefixDecl
  a owl:Class;
  rdfs:subClassOf sparql:NonTerminalNode;
  dct:conformsTo section:PrefixDecl;
  skos:definition "Represents a PREFIX declaration with a namespace prefix and IRI in SPARQL."@en;
  skos:prefLabel "Prefix Declaration"@en;
  rdfs:isDefinedBy sparql:.

sparql:PNAME_LN
  a owl:Class;
  rdfs:subClassOf sparql:SymbolSequence;
  dct:conformsTo section:PNAME_LN;
  skos:definition "Represents an PNAME_LN symbol sequence in the abstract syntax tree of SPARQL."@en;
  skos:prefLabel "PNAME_LN"@en;
  rdfs:isDefinedBy sparql:.    

sparql:PNAME_NS
  a owl:Class;
  rdfs:subClassOf sparql:SymbolSequence;
  dct:conformsTo section:PNAME_NS;
  skos:definition "Represents an PNAME_NS symbol sequence in the abstract syntax tree of SPARQL."@en;
  skos:prefLabel "PNAME_NS"@en;
  rdfs:isDefinedBy sparql:.  

sparql:PN_PREFIX
  a owl:Class;
  rdfs:subClassOf sparql:SymbolSequence;
  dct:conformsTo section:PN_PREFIX;
  skos:definition "Represents an PN_PREFIX symbol sequence in the abstract syntax tree of SPARQL."@en;
  skos:prefLabel "PN_PREFIX"@en;
  rdfs:isDefinedBy sparql:.  

sparql:PN_LOCAL
  a owl:Class;
  rdfs:subClassOf sparql:SymbolSequence;
  dct:conformsTo section:PN_LOCAL;
  skos:definition "Represents an PN_LOCAL symbol sequence in the abstract syntax tree of SPARQL."@en;
  skos:prefLabel "PN_LOCAL"@en;
  rdfs:isDefinedBy sparql:.  

sparql:VARNAME
  a owl:Class;
  rdfs:subClassOf sparql:SymbolSequence;
  dct:conformsTo section:VARNAME;
  skos:definition "Represents an VARNAME symbol sequence in the abstract syntax tree of SPARQL."@en;
  skos:prefLabel "VARNAME"@en;
  rdfs:isDefinedBy sparql:.  
  
sparql:SelectQuery
  a owl:Class;
  rdfs:subClassOf sparql:NonTerminalNode;
  dct:conformsTo section:SelectQuery;
  skos:definition "Represents a SELECT query clause in the abstract syntax tree of SPARQL."@en;
  skos:prefLabel "Select Query"@en;
  rdfs:isDefinedBy sparql:.

sparql:SubSelect
  a owl:Class;
  rdfs:subClassOf sparql:NonTerminalNode;
  dct:conformsTo section:SubSelect;
  skos:definition "Represents a sub-select query in SPARQL with select, where, and solution modifier clauses."@en;
  skos:prefLabel "Sub Select"@en;
  rdfs:isDefinedBy sparql:.

sparql:SelectClause
  a owl:Class;
  rdfs:subClassOf sparql:NonTerminalNode;
  dct:conformsTo section:SelectClause;
  skos:definition "Represents a SELECT clause in SPARQL, specifying variables or expressions."@en;
  skos:prefLabel "Select Clause"@en;
  rdfs:isDefinedBy sparql:.

sparql:Select
  a owl:Class;
  rdfs:subClassOf sparql:Keyword;
  dct:conformsTo section:Select;
  skos:definition "Represents the SELECT keyword in SPARQL."@en;
  skos:prefLabel "SELECT keyword"@en;
  sparql:syntax 'SELECT';
  rdfs:isDefinedBy sparql:.

sparql:Distinct
  a owl:Class;
  rdfs:subClassOf sparql:Keyword;
  dct:conformsTo section:Distinct;
  skos:definition "Represents the DISTINCT keyword in SPARQL."@en;
  skos:prefLabel "DISTINCT keyword"@en;
  sparql:syntax 'DISTINCT';
  rdfs:isDefinedBy sparql:.

sparql:Reduced
  a owl:Class;
  rdfs:subClassOf sparql:Keyword;
  dct:conformsTo section:Reduced;
  skos:definition "Represents the REDUCED keyword in SPARQL."@en;
  skos:prefLabel "REDUCED keyword"@en;
  sparql:syntax 'REDUCED';
  rdfs:isDefinedBy sparql:.

sparql:As
  a owl:Class;
  rdfs:subClassOf sparql:Keyword;
  dct:conformsTo section:As;
  skos:definition "Represents the AS keyword in the abstract syntax tree of SPARQL."@en;
  skos:prefLabel "AS keyword"@en;
  sparql:syntax 'AS';
  rdfs:isDefinedBy sparql:.

sparql:Variable
  a owl:Class;
  rdfs:subClassOf sparql:NonTerminalNode;
  dct:conformsTo section:Variable;
  skos:definition "Represents a variable in a select clause in SPARQL."@en;
  skos:prefLabel "Variable in select clause"@en;
  rdfs:isDefinedBy sparql:.

sparql:Variable1
  a owl:Class;
  rdfs:subClassOf sparql:SymbolSequence;
  dct:conformsTo section:Variable;
  skos:definition "Represents a Variable1 symbol sequence in the abstract syntax tree of SPARQL."@en;
  skos:prefLabel "Variable1"@en;
  sparql:syntax '?';
  rdfs:isDefinedBy sparql:.

sparql:Variable2
  a owl:Class;
  rdfs:subClassOf sparql:SymbolSequence;
  dct:conformsTo section:Variable;
  skos:definition "Represents a Variable2 symbol sequence in the abstract syntax tree of SPARQL."@en;
  skos:prefLabel "Variable2"@en;
  sparql:syntax '$';
  rdfs:isDefinedBy sparql:.  

sparql:Wildcard
  a owl:Class;
  rdfs:subClassOf sparql:Symbol;
  dct:conformsTo section:Wildcard;
  skos:definition "Represents a wildcard symbol in the abstract syntax tree of SPARQL."@en;
  skos:prefLabel "Wildcard"@en;
  sparql:syntax '*';
  rdfs:isDefinedBy sparql:.

sparql:Colon
  a owl:Class;
  rdfs:subClassOf sparql:Symbol;
  dct:conformsTo section:Colon;
  skos:definition "Represents a colon symbol in the abstract syntax tree of SPARQL."@en;
  skos:prefLabel "Colon"@en;
  sparql:syntax ':';  
  rdfs:isDefinedBy sparql:.

sparql:SemiColon
  a owl:Class;
  rdfs:subClassOf sparql:Symbol;
  dct:conformsTo section:SemiColon;
  skos:definition "Represents a semicolon symbol in the abstract syntax tree of SPARQL."@en;
  skos:prefLabel "Semicolon"@en;
  sparql:syntax ';';  
  rdfs:isDefinedBy sparql:.

sparql:Period
  a owl:Class;
  rdfs:subClassOf sparql:Symbol;
  dct:conformsTo section:Period;
  skos:definition "Represents a period symbol in the abstract syntax tree of SPARQL."@en;
  skos:prefLabel "Period"@en;
  sparql:syntax '.';  
  rdfs:isDefinedBy sparql:.

sparql:OpenCurlyBracket
  a owl:Class;
  rdfs:subClassOf sparql:Symbol;
  dct:conformsTo section:OpenCurlyBracket;
  skos:definition "Represents an open curly bracket symbol in the abstract syntax tree of SPARQL."@en;
  skos:prefLabel "Open curly bracket"@en;
  sparql:syntax '{';  
  rdfs:isDefinedBy sparql:.

sparql:ClosedCurlyBracket
  a owl:Class;
  rdfs:subClassOf sparql:Symbol;
  dct:conformsTo section:ClosedCurlyBracket;
  skos:definition "Represents a closed curly bracket symbol in the abstract syntax tree of SPARQL."@en;
  skos:prefLabel "Closed curly bracket"@en;
  sparql:syntax '}';  
  rdfs:isDefinedBy sparql:.

sparql:OpenParenthesis
  a owl:Class;
  rdfs:subClassOf sparql:Symbol;
  dct:conformsTo section:OpenParenthesis;
  skos:definition "Represents an open parenthises symbol in the abstract syntax tree of SPARQL."@en;
  skos:prefLabel "Open parenthesis"@en;
  sparql:syntax '(';  
  rdfs:isDefinedBy sparql:.

sparql:ClosedParenthesis
  a owl:Class;
  rdfs:subClassOf sparql:Symbol;
  dct:conformsTo section:ClosedParenthesis;
  skos:definition "Represents a closed parenthesis symbol in the abstract syntax tree of SPARQL."@en;
  skos:prefLabel "Closed parenthesis"@en;
  sparql:syntax ')';  
  rdfs:isDefinedBy sparql:.    

sparql:OpenSquareBracket
  a owl:Class;
  rdfs:subClassOf sparql:Symbol;
  dct:conformsTo section:OpenSquareBracket;
  skos:definition "Represents an open square bracket symbol in the abstract syntax tree of SPARQL."@en;
  skos:prefLabel "Open square bracket"@en;
  sparql:syntax '[';  
  rdfs:isDefinedBy sparql:.

sparql:ClosedSquareBracket
  a owl:Class;
  rdfs:subClassOf sparql:Symbol;
  dct:conformsTo section:ClosedSquareBracket;
  skos:definition "Represents a closed square bracket symbol in the abstract syntax tree of SPARQL."@en;
  skos:prefLabel "Closed square bracket"@en;
  sparql:syntax ']';  
  rdfs:isDefinedBy sparql:.

sparql:PlusSign
  a owl:Class;
  rdfs:subClassOf sparql:Symbol;
  dct:conformsTo section:PlusSign;
  skos:definition "Represents a plus symbol in the abstract syntax tree of SPARQL."@en;
  skos:prefLabel "Plus sign"@en;
  sparql:syntax '+';  
  rdfs:isDefinedBy sparql:.

sparql:MinusSign
  a owl:Class;
  rdfs:subClassOf sparql:Symbol;
  dct:conformsTo section:MinusSign;
  skos:definition "Represents a minus symbol in the abstract syntax tree of SPARQL."@en;
  skos:prefLabel "Minus sign"@en;
  sparql:syntax '-';  
  rdfs:isDefinedBy sparql:.

sparql:MultiplicationSign
  a owl:Class;
  rdfs:subClassOf sparql:Symbol;
  dct:conformsTo section:MultiplicationSign;
  skos:definition "Represents a multiplication symbol in the abstract syntax tree of SPARQL."@en;
  skos:prefLabel "Multiplication sign"@en;
  sparql:syntax '*';  
  rdfs:isDefinedBy sparql:.

sparql:DivisionSign
  a owl:Class;
  rdfs:subClassOf sparql:Symbol;
  dct:conformsTo section:DivisionSign;
  skos:definition "Represents a division symbol in the abstract syntax tree of SPARQL."@en;
  skos:prefLabel "Division sign"@en;
  sparql:syntax '/';  
  rdfs:isDefinedBy sparql:.
  
sparql:LessThan
  a owl:Class;
  rdfs:subClassOf sparql:Symbol;
  dct:conformsTo section:LessThan;
  skos:definition "Represents a less than symbol in the abstract syntax tree of SPARQL."@en;
  skos:prefLabel "Less than symbol"@en;
  sparql:syntax '<';  
  rdfs:isDefinedBy sparql:.

sparql:GreaterThan
  a owl:Class;
  rdfs:subClassOf sparql:Symbol;
  dct:conformsTo section:GreaterThan;
  skos:definition "Represents a greater than symbol in the abstract syntax tree of SPARQL."@en;
  skos:prefLabel "Greater than symbol"@en;
  sparql:syntax '>';  
  rdfs:isDefinedBy sparql:.

sparql:Equal
  a owl:Class;
  rdfs:subClassOf sparql:Symbol;
  dct:conformsTo section:Equal;
  skos:definition "Represents an equal symbol in the abstract syntax tree of SPARQL."@en;
  skos:prefLabel "Equal symbol"@en;
  sparql:syntax '=';  
  rdfs:isDefinedBy sparql:.

sparql:NotEqual
  a owl:Class;
  rdfs:subClassOf sparql:Symbol;
  dct:conformsTo section:NotEqual;
  skos:definition "Represents a not-equal symbol in the abstract syntax tree of SPARQL."@en;
  skos:prefLabel "Not-Equal symbol"@en;
  sparql:syntax '!=';  
  rdfs:isDefinedBy sparql:.
  
sparql:ExclamationMark
  a owl:Class;
  rdfs:subClassOf sparql:Symbol;
  dct:conformsTo section:ExclamationMark;
  skos:definition "Represents an exclamation mark symbol in the abstract syntax tree of SPARQL."@en;
  skos:prefLabel "Exclamation mark"@en;
  sparql:syntax '!';  
  rdfs:isDefinedBy sparql:.

sparql:QuestionMark
  a owl:Class;
  rdfs:subClassOf sparql:Symbol;
  dct:conformsTo section:QuestionMark;
  skos:definition "Represents a question symbol in the abstract syntax tree of SPARQL."@en;
  skos:prefLabel "Question mark"@en;
  sparql:syntax '?';  
  rdfs:isDefinedBy sparql:.

sparql:Caret
  a owl:Class;
  rdfs:subClassOf sparql:Symbol;
  dct:conformsTo section:Caret;
  skos:definition "Represents a caret symbol in the abstract syntax tree of SPARQL."@en;
  skos:prefLabel "Caret"@en;
  sparql:syntax '^';  
  rdfs:isDefinedBy sparql:.

sparql:And
  a owl:Class;
  rdfs:subClassOf sparql:Symbol;
  dct:conformsTo section:And;
  skos:definition "Represents an AND symbol in the abstract syntax tree of SPARQL."@en;
  skos:prefLabel "AND symbol"@en;
  sparql:syntax '&&';  
  rdfs:isDefinedBy sparql:.

sparql:Or
  a owl:Class;
  rdfs:subClassOf sparql:Symbol;
  dct:conformsTo section:Or;
  skos:definition "Represents an OR symbol in the abstract syntax tree of SPARQL."@en;
  skos:prefLabel "OR symbol"@en;
  sparql:syntax '||';  
  rdfs:isDefinedBy sparql:.

sparql:Expression
  a owl:Class;
  rdfs:subClassOf sparql:NonTerminalNode;
  dct:conformsTo section:Expression;
  skos:definition 'Represents conditions used in filters, comparisons, or mathematical expressions.'@en;
  skos:prefLabel 'Expression'@en;
  rdfs:isDefinedBy sparql:.

sparql:ConstructQuery
  a owl:Class;
  rdfs:subClassOf sparql:NonTerminalNode;
  dct:conformsTo section:ConstructQuery;
  skos:definition "Represents a CONSTRUCT query in SPARQL, which constructs new RDF triples."@en;
  skos:prefLabel "Construct Query"@en;
  rdfs:isDefinedBy sparql:.

sparql:Construct
  a owl:Class;
  rdfs:subClassOf sparql:Keyword;
  dct:conformsTo section:Construct;
  skos:definition "Represents the CONSTRUCT keyword in the abstract syntax tree of SPARQL."@en;
  skos:prefLabel "CONSTRUCT keyword"@en;
  sparql:syntax 'CONSTRUCT';
  rdfs:isDefinedBy sparql:.  

sparql:DescribeQuery
  a owl:Class;
  rdfs:subClassOf sparql:NonTerminalNode;
  dct:conformsTo section:DescribeQuery;
  skos:definition "Represents a DESCRIBE query in SPARQL, returning descriptions of resources."@en;
  skos:prefLabel "Describe Query"@en;
  rdfs:isDefinedBy sparql:.

sparql:Describe
  a owl:Class;
  rdfs:subClassOf sparql:Keyword;
  dct:conformsTo section:Describe;
  skos:definition "Represents the DESCRIBE keyword in the abstract syntax tree of SPARQL."@en;
  skos:prefLabel "DESCRIBE keyword"@en;
  sparql:syntax 'DESCRIBE';
  rdfs:isDefinedBy sparql:.    

sparql:AskQuery
  a owl:Class;
  rdfs:subClassOf sparql:NonTerminalNode;
  dct:conformsTo section:AskQuery;
  skos:definition "Represents an ASK query in SPARQL, which returns a boolean result."@en;
  skos:prefLabel "Ask Query"@en;
  rdfs:isDefinedBy sparql:.

sparql:Ask
  a owl:Class;
  rdfs:subClassOf sparql:Keyword;
  dct:conformsTo section:Ask;
  skos:definition "Represents the ASK keyword in the abstract syntax tree of SPARQL."@en;
  skos:prefLabel "ASK keyword"@en;
  sparql:syntax 'ASK';
  rdfs:isDefinedBy sparql:.  

sparql:DatasetClause
  a owl:Class;
  rdfs:subClassOf sparql:NonTerminalNode;
  dct:conformsTo section:DatasetClause;
  skos:definition "Represents a dataset clause in SPARQL, specifying a graph from which to query."@en;
  skos:prefLabel "Dataset Clause"@en;
  rdfs:isDefinedBy sparql:.

sparql:From
  a owl:Class;
  rdfs:subClassOf sparql:Keyword;
  dct:conformsTo section:From;
  skos:definition "Represents the FROM keyword in the abstract syntax tree of SPARQL."@en;
  skos:prefLabel "FROM keyword"@en;
  sparql:syntax 'FROM';
  rdfs:isDefinedBy sparql:.  
  
sparql:DefaultGraphClause
  a owl:Class;
  rdfs:subClassOf sparql:NonTerminalNode;
  dct:conformsTo section:DefaultGraphClause;
  skos:definition "Represents a default graph clause in SPARQL, specifying the source selector."@en;
  skos:prefLabel "Default Graph Clause"@en;
  rdfs:isDefinedBy sparql:.

sparql:NamedGraphClause
  a owl:Class;
  rdfs:subClassOf sparql:NonTerminalNode;
  dct:conformsTo section:NamedGraphClause;
  skos:definition "Represents a named graph clause in SPARQL, specifying the source selector."@en;
  skos:prefLabel "Named Graph Clause"@en;
  rdfs:isDefinedBy sparql:.

sparql:Named
  a owl:Class;
  rdfs:subClassOf sparql:Keyword;
  dct:conformsTo section:Named;
  skos:definition "Represents the Named keyword in the abstract syntax tree of SPARQL."@en;
  skos:prefLabel "NAMED keyword"@en;
  sparql:syntax 'NAMED';
  rdfs:isDefinedBy sparql:.  
  
sparql:SourceSelector
  a owl:Class;
  rdfs:subClassOf sparql:NonTerminalNode;
  dct:conformsTo section:SourceSelector;
  skos:definition "Represents a source selector in SPARQL, identifying a graph using an IRI."@en;
  skos:prefLabel "Source Selector"@en;
  rdfs:isDefinedBy sparql:.

sparql:WhereClause
  a owl:Class;
  rdfs:subClassOf sparql:NonTerminalNode;
  dct:conformsTo section:WhereClause;
  skos:definition "Represents the WHERE clause in SPARQL, containing graph patterns to match."@en;
  skos:prefLabel "Where Clause"@en;
  rdfs:isDefinedBy sparql:.

sparql:Where
  a owl:Class;
  rdfs:subClassOf sparql:Keyword;
  dct:conformsTo section:Where;
  skos:definition "Represents a WHERE keyword in SPARQL."@en;
  skos:prefLabel "WHERE keyword"@en;
  sparql:syntax 'WHERE';
  rdfs:isDefinedBy sparql:.

sparql:SolutionModifier
  a owl:Class;
  rdfs:subClassOf sparql:NonTerminalNode;
  dct:conformsTo section:SolutionModifier;
  skos:definition "Represents a solution modifier in SPARQL, modifying the result set (e.g., LIMIT, OFFSET)."@en;
  skos:prefLabel "Solution Modifier"@en;
  rdfs:isDefinedBy sparql:.

sparql:GroupGraphPattern
  a owl:Class;
  rdfs:subClassOf sparql:NonTerminalNode;
  dct:conformsTo section:GroupGraphPattern;
  skos:definition "Represents a group graph pattern in SPARQL, containing a set of graph patterns that must all match."@en;
  skos:prefLabel "Group Graph Pattern"@en;
  rdfs:isDefinedBy sparql:.

sparql:GroupGraphPatternSub
  a owl:Class;
  rdfs:subClassOf sparql:NonTerminalNode;
  dct:conformsTo section:GroupGraphPatternSub;
  skos:definition "Represents a group graph pattern sub in SPARQL, containing a set of graph patterns that must all match."@en;
  skos:prefLabel "Group Graph Pattern Sub"@en;
  rdfs:isDefinedBy sparql:.

sparql:TriplesBlock
  a owl:Class;
  rdfs:subClassOf sparql:NonTerminalNode;
  dct:conformsTo section:TriplesBlock;
  skos:definition "Represents a triple block in SPARQL."@en;
  skos:prefLabel "Triples Block"@en;
  rdfs:isDefinedBy sparql:.

sparql:GraphPatternNotTriples
  a owl:Class;
  rdfs:subClassOf sparql:NonTerminalNode;
  dct:conformsTo section:GraphPatternNotTriples;
  skos:definition "Represents graph patterns in SPARQL that are not simple triple patterns, such as optional and union patterns."@en;
  skos:prefLabel "Graph Pattern Not Triples"@en;
  rdfs:isDefinedBy sparql:.

sparql:TriplesSameSubject
  a owl:Class;
  rdfs:subClassOf sparql:NonTerminalNode;
  dct:conformsTo section:TriplesSameSubject;
  skos:definition "Represents a group of triples that share the same subject in a query pattern."@en;
  skos:prefLabel "Triples Same Subject"@en;
  rdfs:isDefinedBy sparql:. 
  
sparql:TriplesSameSubjectPath 
  a owl:Class;
  rdfs:subClassOf sparql:NonTerminalNode;
  dct:conformsTo section:TriplesSameSubjectPath;
  skos:definition "Represents a set of triples with the same subject, following a property path."@en;
  skos:prefLabel "Triples Same Subject Path"@en;
  rdfs:isDefinedBy sparql:. 

sparql:VarOrTerm
  a owl:Class;
  rdfs:subClassOf sparql:NonTerminalNode;
  dct:conformsTo section:VarOrTerm;
  skos:definition "Represents either a variable or a term (IRI, literal, or blank node) in the abstract syntax tree of SPARQL."@en;
  skos:prefLabel "Var or Term"@en;
  rdfs:isDefinedBy sparql:. 

sparql:VarOrIri
  a owl:Class;
  rdfs:subClassOf sparql:NonTerminalNode;
  dct:conformsTo section:VarOrIri;
  skos:definition "Represents either a variable or an IRI in a query expression."@en;
  skos:prefLabel "Var or Iri"@en;
  rdfs:isDefinedBy sparql:. 
  
sparql:GraphTerm
  a owl:Class;
  rdfs:subClassOf sparql:NonTerminalNode;
  dct:conformsTo section:VarOrTerm;
  skos:definition "Represents an RDF term within a graph, such as a subject, predicate, or object."@en;
  skos:prefLabel "Graph term"@en;
  rdfs:isDefinedBy sparql:.   

sparql:PropertyList
  a owl:Class;
  rdfs:subClassOf sparql:NonTerminalNode;
  dct:conformsTo section:PropertyList;
  skos:definition "Represents a list of properties associated with a subject in the abstract syntax tree of SPARQL."@en;
  skos:prefLabel "Property List"@en;
  rdfs:isDefinedBy sparql:. 

sparql:PropertyListNotEmpty
  a owl:Class;
  rdfs:subClassOf sparql:NonTerminalNode;
  dct:conformsTo section:PropertyListNotEmpty;
  skos:definition "Represents a property list that is not empty, indicating that the subject has at least one property."@en;
  skos:prefLabel "Property List Not Empty"@en;
  rdfs:isDefinedBy sparql:. 
  
sparql:PropertyListPath
  a owl:Class;
  rdfs:subClassOf sparql:NonTerminalNode;
  dct:conformsTo section:PropertyListPath;
  skos:definition "Represents a list of properties along a path in the abstract syntax tree of SPARQL."@en;
  skos:prefLabel "Property List Path"@en;
  rdfs:isDefinedBy sparql:. 
  
sparql:PropertyListPathNotEmpty
  a owl:Class;
  rdfs:subClassOf sparql:NonTerminalNode;
  dct:conformsTo section:PropertyListPathNotEmpty;
  skos:definition "Represents a non-empty list of properties along a path."@en;
  skos:prefLabel "Property List Path Not Empty"@en;
  rdfs:isDefinedBy sparql:. 

sparql:Verb
  a owl:Class;
  rdfs:subClassOf sparql:NonTerminalNode;
  dct:conformsTo section:Verb;
  skos:definition "Represents a verb in a query pattern, typically a predicate in an RDF triple."@en;
  skos:prefLabel "Verb"@en;
  rdfs:isDefinedBy sparql:. 
  
sparql:VerbPath
  a owl:Class;
  rdfs:subClassOf sparql:NonTerminalNode;
  dct:conformsTo section:VerbPath;
  skos:definition "Represents a path expression that acts as a verb in an RDF triple."@en;
  skos:prefLabel "Verb Path"@en;
  rdfs:isDefinedBy sparql:. 

sparql:VerbSimple
  a owl:Class;
  rdfs:subClassOf sparql:NonTerminalNode;
  dct:conformsTo section:VerbSimple;
  skos:definition "Represents a simple verb, typically a single predicate in an RDF triple."@en;
  skos:prefLabel "Verb Simple"@en;
  rdfs:isDefinedBy sparql:. 

sparql:ObjectList
  a owl:Class;
  rdfs:subClassOf sparql:NonTerminalNode;
  dct:conformsTo section:ObjectList;
  skos:definition "Represents a list of objects in the abstract syntax tree of SPARQL pattern."@en;
  skos:prefLabel "Object List"@en;
  rdfs:isDefinedBy sparql:.  

sparql:Object
  a owl:Class;
  rdfs:subClassOf sparql:NonTerminalNode;
  dct:conformsTo section:Object;
  skos:definition "Represents the object in an RDF triple, which can be an IRI, a literal, or a blank node."@en;
  skos:prefLabel "Object"@en;
  rdfs:isDefinedBy sparql:.  

sparql:ObjectListPath
  a owl:Class;
  rdfs:subClassOf sparql:NonTerminalNode;
  dct:conformsTo section:ObjectListPath;
  skos:definition "Represents a list of objects along a specified path in a property path expression."@en;
  skos:prefLabel "Object List Path"@en;
  rdfs:isDefinedBy sparql:.  
  
sparql:ObjectPath
  a owl:Class;
  rdfs:subClassOf sparql:NonTerminalNode;
  dct:conformsTo section:ObjectPath;
  skos:definition "Represents the path to an object in a property path expression."@en;
  skos:prefLabel "Object Path"@en;
  rdfs:isDefinedBy sparql:.   

sparql:Path
  a owl:Class;
  rdfs:subClassOf sparql:NonTerminalNode;
  dct:conformsTo section:Path;
  skos:definition "Represents a property path, which is a sequence of properties used to traverse the RDF graph in SPARQL queries."@en;
  skos:prefLabel "Path"@en;
  rdfs:isDefinedBy sparql:.   

sparql:PathAlternative
  a owl:Class;
  rdfs:subClassOf sparql:NonTerminalNode;
  dct:conformsTo section:PathAlternative;
  skos:definition "Represents an alternative path in a property path, typically using the | operator to express multiple possible paths."@en;
  skos:prefLabel "Path Alternative"@en;
  rdfs:isDefinedBy sparql:.   

sparql:PathSequence
  a owl:Class;
  rdfs:subClassOf sparql:NonTerminalNode;
  dct:conformsTo section:PathSequence;
  skos:definition "Represents a sequence of property paths, allowing traversal over multiple properties."@en;
  skos:prefLabel "Path Sequence"@en;
  rdfs:isDefinedBy sparql:.   

sparql:PathElt
  a owl:Class;
  rdfs:subClassOf sparql:NonTerminalNode;
  dct:conformsTo section:PathElt;
  skos:definition "Represents an element of a property path in SPARQL."@en;
  skos:prefLabel "Path Elt"@en;
  rdfs:isDefinedBy sparql:.   

sparql:PathEltOrInverse
  a owl:Class;
  rdfs:subClassOf sparql:NonTerminalNode;
  dct:conformsTo section:PathEltOrInverse;
  skos:definition "Represents either a path element or its inverse (using ^ to reverse the direction of the path)."@en;
  skos:prefLabel "Path Elt Or Inverse"@en;
  rdfs:isDefinedBy sparql:.   

sparql:PathMod
  a owl:Class;
  rdfs:subClassOf sparql:NonTerminalNode;
  dct:conformsTo section:PathMod;
  skos:definition "Represents a modifier on a path, such as * (zero or more), + (one or more), or ? (zero or one)."@en;
  skos:prefLabel "Path Mod"@en;
  rdfs:isDefinedBy sparql:.   

sparql:PathPrimary
  a owl:Class;
  rdfs:subClassOf sparql:NonTerminalNode;
  dct:conformsTo section:PathPrimary;
  skos:definition "Represents the primary part of a property path expression."@en;
  skos:prefLabel "Path Primary"@en;
  rdfs:isDefinedBy sparql:.   

sparql:PathNegatedPropertySet
  a owl:Class;
  rdfs:subClassOf sparql:NonTerminalNode;
  dct:conformsTo section:PathNegatedPropertySet;
  skos:definition "Represents a negated property set in a path, which matches any property except the ones listed."@en;
  skos:prefLabel "Path Negated Property Set"@en;
  rdfs:isDefinedBy sparql:.   

sparql:PathOneInPropertySet
  a owl:Class;
  rdfs:subClassOf sparql:NonTerminalNode;
  dct:conformsTo section:PathOneInPropertySet;
  skos:definition "Represents one property in a property set, used in path expressions."@en;
  skos:prefLabel "Path One In Property Set"@en;
  rdfs:isDefinedBy sparql:.   

sparql:IntegerClause
  a owl:Class;
  rdfs:subClassOf sparql:NonTerminalNode;
  dct:conformsTo section:IntegerClause;
  skos:definition "Represents the INSERT clause in SPARQL Update, which adds new triples to the dataset."@en;
  skos:prefLabel "Integer Clause"@en;
  rdfs:isDefinedBy sparql:.   

sparql:TriplesNode
  a owl:Class;
  rdfs:subClassOf sparql:NonTerminalNode;
  dct:conformsTo section:TriplesNode;
  skos:definition "Represents a node that is part of a triple in a query pattern, typically a subject or object."@en;
  skos:prefLabel "Triples Node"@en;
  rdfs:isDefinedBy sparql:.   

sparql:BlankNodePropertyList
  a owl:Class;
  rdfs:subClassOf sparql:NonTerminalNode;
  dct:conformsTo section:BlankNodePropertyList;
  skos:definition "Represents a property list associated with a blank node in SPARQL, typically used to describe multiple property-value pairs for a blank node."@en;
  skos:prefLabel "BlankNodePropertyList"@en;
  rdfs:isDefinedBy sparql:.   

sparql:TriplesNodePath
  a owl:Class;
  rdfs:subClassOf sparql:NonTerminalNode;
  dct:conformsTo section:TriplesNodePath;
  skos:definition "Represents a path between nodes in a triple pattern, allowing for traversal over multiple nodes."@en;
  skos:prefLabel "Triples Node Path"@en;
  rdfs:isDefinedBy sparql:.   

sparql:Collection
  a owl:Class;
  rdfs:subClassOf sparql:NonTerminalNode;
  dct:conformsTo section:Collection ;
  skos:definition "Represents an RDF collection, a sequence of items, typically represented with RDF rdf:first and rdf:rest properties."@en;
  skos:prefLabel "Collection"@en;
  rdfs:isDefinedBy sparql:.  

sparql:CollectionPath 
  a owl:Class;
  rdfs:subClassOf sparql:NonTerminalNode;
  dct:conformsTo section:CollectionPath ;
  skos:definition "Represents a path over RDF collections in a SPARQL property path, allowing traversal of RDF list structures."@en;
  skos:prefLabel "Collection Path"@en;
  rdfs:isDefinedBy sparql:.  

sparql:GraphNode
  a owl:Class;
  rdfs:subClassOf sparql:NonTerminalNode;
  dct:conformsTo section:GraphNode;
  skos:definition "Represents a node in the RDF graph, which could be an IRI, a blank node, or a literal value."@en;
  skos:prefLabel "Graph Node"@en;
  rdfs:isDefinedBy sparql:.    

sparql:GraphNodePath
  a owl:Class;
  rdfs:subClassOf sparql:NonTerminalNode;
  dct:conformsTo section:GraphNodePath;
  skos:definition "Represents a path that can be followed between nodes in the RDF graph, used in property path expressions."@en;
  skos:prefLabel "Graph Node Path"@en;
  rdfs:isDefinedBy sparql:.    

sparql:BlankNodePropertyListPath  
  a owl:Class;
  rdfs:subClassOf sparql:NonTerminalNode;
  dct:conformsTo section:BlankNodePropertyListPath   ;
  skos:definition "Represents a path of properties that applies to a blank node, used in property path expressions in SPARQL queries."@en;
  skos:prefLabel "Blank Node Property List Path"@en;
  rdfs:isDefinedBy sparql:.  

sparql:OptionalGraphPattern
  a owl:Class;
  rdfs:subClassOf sparql:NonTerminalNode;
  dct:conformsTo section:OptionalGraphPattern;
  skos:definition "Represents an OPTIONAL graph pattern in SPARQL, which extends the result set with additional values if a pattern exists."@en;
  skos:prefLabel "Optional Graph Pattern"@en;
  rdfs:isDefinedBy sparql:.

sparql:Optional
  a owl:Class;
  rdfs:subClassOf sparql:Keyword;
  dct:conformsTo section:Optional;
  skos:definition "Represents the OPTIONAL keyword in the abstract syntax tree of SPARQL."@en;
  skos:prefLabel "OPTIONAL keyword"@en;
  sparql:syntax 'OPTIONAL';
  rdfs:isDefinedBy sparql:.  

sparql:GraphGraphPattern
  a owl:Class;
  rdfs:subClassOf sparql:NonTerminalNode;
  dct:conformsTo section:GraphGraphPattern;
  skos:definition "Represents a GRAPH graph pattern in SPARQL, specifying a named graph to match."@en;
  skos:prefLabel "Graph Graph Pattern"@en;
  rdfs:isDefinedBy sparql:.
  
sparql:Graph
  a owl:Class;
  rdfs:subClassOf sparql:Keyword;
  dct:conformsTo section:Graph;
  skos:definition "Represents the GRAPH keyword in the abstract syntax tree of SPARQL."@en;
  skos:prefLabel "GRAPH keyword"@en;
  sparql:syntax 'GRAPH';
  rdfs:isDefinedBy sparql:.    

sparql:ServiceGraphPattern
  a owl:Class;
  rdfs:subClassOf sparql:NonTerminalNode;
  dct:conformsTo section:ServiceGraphPattern;
  skos:definition "Represents a SERVICE graph pattern in SPARQL, specifying a remote SPARQL endpoint to query."@en;
  skos:prefLabel "Service Graph Pattern"@en;
  rdfs:isDefinedBy sparql:.

sparql:Service
  a owl:Class;
  rdfs:subClassOf sparql:Keyword;
  dct:conformsTo section:Service;
  skos:definition "Represents the SERVICE keyword in the abstract syntax tree of SPARQL."@en;
  skos:prefLabel "SERVICE keyword"@en;
  sparql:syntax 'SERVICE';
  rdfs:isDefinedBy sparql:.    

sparql:BindClause
  a owl:Class;
  rdfs:subClassOf sparql:NonTerminalNode;
  dct:conformsTo section:BindClause;
  skos:definition "Represents a BIND clause in SPARQL, binding a value to a variable in the result set."@en;
  skos:prefLabel "Bind clause"@en;
  rdfs:isDefinedBy sparql:.

sparql:Bind
  a owl:Class;
  rdfs:subClassOf sparql:Keyword;
  dct:conformsTo section:Bind;
  skos:definition "Represents the BIND keyword in SPARQL."@en;
  skos:prefLabel "BIND keyword"@en;
  sparql:syntax "BIND";
  rdfs:isDefinedBy sparql:.  

sparql:InlineData
  a owl:Class;
  rdfs:subClassOf sparql:NonTerminalNode;
  dct:conformsTo section:InlineData;
  skos:definition "Represents an inline data block in SPARQL, providing explicit values for variables in the query."@en;
  skos:prefLabel "Inline Data"@en;
  rdfs:isDefinedBy sparql:.

sparql:Values
  a owl:Class;
  rdfs:subClassOf sparql:Keyword;
  dct:conformsTo section:Values;
  skos:definition "Represents the VALUES keyword in SPARQL."@en;
  skos:prefLabel "VALUES keyword"@en;
  sparql:syntax "VALUES";
  rdfs:isDefinedBy sparql:.  

sparql:DataBlock
  a owl:Class;
  rdfs:subClassOf sparql:NonTerminalNode;
  dct:conformsTo section:DataBlock;
  skos:definition "Represents a data block in SPARQL."@en;
  skos:prefLabel "Data block"@en;
  rdfs:isDefinedBy sparql:.

sparql:InlineDataOneVar
  a owl:Class;
  rdfs:subClassOf sparql:NonTerminalNode;
  dct:conformsTo section:InlineDataOneVar;
  skos:definition "Represents an inline data one var in SPARQL."@en;
  skos:prefLabel "Inline data one var"@en;
  rdfs:isDefinedBy sparql:.

sparql:InlineDataFull
  a owl:Class;
  rdfs:subClassOf sparql:NonTerminalNode;
  dct:conformsTo section:InlineDataFull;
  skos:definition "Represents an inline data full in SPARQL."@en;
  skos:prefLabel "Inline data full"@en;
  rdfs:isDefinedBy sparql:.

sparql:DataBlockValue
  a owl:Class;
  rdfs:subClassOf sparql:NonTerminalNode;
  dct:conformsTo section:DataBlockValue;
  skos:definition "Represents a data block value in SPARQL."@en;
  skos:prefLabel "Data block value"@en;
  rdfs:isDefinedBy sparql:.
  
sparql:MinusGraphPattern
  a owl:Class;
  rdfs:subClassOf sparql:NonTerminalNode;
  dct:conformsTo section:MinusGraphPattern;
  skos:definition "Represents a MINUS graph pattern in SPARQL, which removes certain solutions from the result set."@en;
  skos:prefLabel "Minus Graph Pattern"@en;
  rdfs:isDefinedBy sparql:.

sparql:Minus
  a owl:Class;
  rdfs:subClassOf sparql:Keyword;
  dct:conformsTo section:Minus;
  skos:definition "Represents the MINUS keyword in the abstract syntax tree of SPARQL."@en;
  skos:prefLabel "MINUS keyword"@en;
  sparql:syntax 'MINUS';
  rdfs:isDefinedBy sparql:.  

sparql:GroupOrUnionGraphPattern
  a owl:Class;
  rdfs:subClassOf sparql:NonTerminalNode;
  dct:conformsTo section:GroupOrUnionGraphPattern;
  skos:definition "Represents a group or union graph pattern in SPARQL."@en;
  skos:prefLabel "Group or union graph pattern"@en;
  rdfs:isDefinedBy sparql:.

sparql:FilterClause
  a owl:Class;
  rdfs:subClassOf sparql:NonTerminalNode;
  dct:conformsTo section:FilterClause;
  skos:definition "Represents a FILTER clause in SPARQL, applying constraints to the result set based on a boolean condition."@en;
  skos:prefLabel "Filter clause"@en;
  rdfs:isDefinedBy sparql:.

sparql:Filter
  a owl:Class;
  rdfs:subClassOf sparql:Keyword;
  dct:conformsTo section:Filter;
  skos:definition "Represents the FILTER keyword in the abstract syntax tree of SPARQL."@en;
  skos:prefLabel "FILTER keyword"@en;
  sparql:syntax 'FILTER';
  rdfs:isDefinedBy sparql:.  

sparql:Constraint
  a owl:Class;
  rdfs:subClassOf sparql:NonTerminalNode;
  dct:conformsTo section:Constraint;
  skos:definition "Represents a constraint clause in SPARQL."@en;
  skos:prefLabel "Constraint clause"@en;
  rdfs:isDefinedBy sparql:.

sparql:BrackettedExpression
  a owl:Class;
  rdfs:subClassOf sparql:NonTerminalNode;
  dct:conformsTo section:BrackettedExpression;
  skos:definition "Represents a bracketted expression clause in SPARQL."@en;
  skos:prefLabel "Bracketted Expression clause"@en;
  rdfs:isDefinedBy sparql:.

sparql:ConditionalOrExpression
  a owl:Class;
  rdfs:subClassOf sparql:NonTerminalNode;
  dct:conformsTo section:ConditionalOrExpression;
  skos:definition "Represents a conditional or expression clause in SPARQL."@en;
  skos:prefLabel "Conditional Or Expression clause"@en;
  rdfs:isDefinedBy sparql:.

sparql:ConditionalAndExpression
  a owl:Class;
  rdfs:subClassOf sparql:NonTerminalNode;
  dct:conformsTo section:ConditionalAndExpression;
  skos:definition "Represents a conditional and expression clause in SPARQL."@en;
  skos:prefLabel "Conditional And Expression clause"@en;
  rdfs:isDefinedBy sparql:.

sparql:ValueLogical
  a owl:Class;
  rdfs:subClassOf sparql:NonTerminalNode;
  dct:conformsTo section:ValueLogical;
  skos:definition "Represents a value logical clause in SPARQL."@en;
  skos:prefLabel "Value Logical clause"@en;
  rdfs:isDefinedBy sparql:.

sparql:RelationalExpression
  a owl:Class;
  rdfs:subClassOf sparql:NonTerminalNode;
  dct:conformsTo section:RelationalExpression;
  skos:definition "Represents a relational expression clause in SPARQL."@en;
  skos:prefLabel "Relational Expression clause"@en;
  rdfs:isDefinedBy sparql:.

sparql:NumericExpression
  a owl:Class;
  rdfs:subClassOf sparql:NonTerminalNode;
  dct:conformsTo section:NumericExpression;
  skos:definition "Represents a numeric expression clause in SPARQL."@en;
  skos:prefLabel "Numeric Expression clause"@en;
  rdfs:isDefinedBy sparql:.

sparql:ExpressionList
  a owl:Class;
  rdfs:subClassOf sparql:NonTerminalNode;
  dct:conformsTo section:ExpressionList;
  skos:definition "Represents an expression list clause in SPARQL."@en;
  skos:prefLabel "Expression List clause"@en;
  rdfs:isDefinedBy sparql:.

sparql:ConstructTemplate
  a owl:Class;
  rdfs:subClassOf sparql:NonTerminalNode;
  dct:conformsTo section:ConstructTemplate;
  skos:definition "Represents a construct template in SPARQL."@en;
  skos:prefLabel "Construct Template"@en;
  rdfs:isDefinedBy sparql:.

sparql:ConstructTriples
  a owl:Class;
  rdfs:subClassOf sparql:NonTerminalNode;
  dct:conformsTo section:ConstructTriples;
  skos:definition "Represents construct triples in SPARQL."@en;
  skos:prefLabel "Construct triples"@en;
  rdfs:isDefinedBy sparql:.

sparql:AdditiveExpression
  a owl:Class;
  rdfs:subClassOf sparql:NonTerminalNode;
  dct:conformsTo section:AdditiveExpression;
  skos:definition "Represents a numeric expression clause in SPARQL."@en;
  skos:prefLabel "AdditiveExpression clause"@en;
  rdfs:isDefinedBy sparql:.

sparql:MultiplicativeExpression
  a owl:Class;
  rdfs:subClassOf sparql:NonTerminalNode;
  dct:conformsTo section:MultiplicativeExpression;
  skos:definition "Represents a multiplicative expression clause in SPARQL."@en;
  skos:prefLabel "MultiplicativeExpression clause"@en;
  rdfs:isDefinedBy sparql:.  

sparql:NumericLiteralPositive
  a owl:Class;
  rdfs:subClassOf sparql:NonTerminalNode;
  dct:conformsTo section:NumericLiteralPositive;
  skos:definition "Represents a numeric literal positive in SPARQL."@en;
  skos:prefLabel "NumericLiteralPositive clause"@en;
  rdfs:isDefinedBy sparql:.

sparql:NumericLiteralNegative
  a owl:Class;
  rdfs:subClassOf sparql:NonTerminalNode;
  dct:conformsTo section:NumericLiteralNegative;
  skos:definition "Represents a numeric literal negative in SPARQL."@en;
  skos:prefLabel "NumericLiteralNegative clause"@en;
  rdfs:isDefinedBy sparql:.    

sparql:NumericLiteralUnsigned
  a owl:Class;
  rdfs:subClassOf sparql:NonTerminalNode;
  dct:conformsTo section:NumericLiteralUnsigned;
  skos:definition "Represents a numeric literal unsigned in SPARQL."@en;
  skos:prefLabel "NumericLiteralUnsigned clause"@en;
  rdfs:isDefinedBy sparql:.

sparql:UnaryExpression
  a owl:Class;
  rdfs:subClassOf sparql:NonTerminalNode;
  dct:conformsTo section:UnaryExpression;
  skos:definition "Represents an unary expression clause in SPARQL."@en;
  skos:prefLabel "UnaryExpression clause"@en;
  rdfs:isDefinedBy sparql:. 

sparql:PrimaryExpression
  a owl:Class;
  rdfs:subClassOf sparql:NonTerminalNode;
  dct:conformsTo section:PrimaryExpression;
  skos:definition "Represents a primary expression clause in SPARQL."@en;
  skos:prefLabel "PrimaryExpression clause"@en;
  rdfs:isDefinedBy sparql:. 

sparql:SubstringExpression
  a owl:Class;
  rdfs:subClassOf sparql:NonTerminalNode;
  dct:conformsTo section:SubstringExpression;
  skos:definition "Represents a substring expression clause in SPARQL."@en;
  skos:prefLabel "SubstringExpression clause"@en;
  rdfs:isDefinedBy sparql:. 

sparql:StrReplaceExpression
  a owl:Class;
  rdfs:subClassOf sparql:NonTerminalNode;
  dct:conformsTo section:StrReplaceExpression;
  skos:definition "Represents a StrReplaceExpression clause in SPARQL."@en;
  skos:prefLabel "StrReplaceExpression clause"@en;
  rdfs:isDefinedBy sparql:. 

sparql:RegexExpression
  a owl:Class;
  rdfs:subClassOf sparql:NonTerminalNode;
  dct:conformsTo section:RegexExpression;
  skos:definition "Represents a RegexExpression clause in SPARQL."@en;
  skos:prefLabel "RegexExpression clause"@en;
  rdfs:isDefinedBy sparql:. 

sparql:ExistsFunc
  a owl:Class;
  rdfs:subClassOf sparql:NonTerminalNode;
  dct:conformsTo section:ExistsFunc;
  skos:definition "Represents a ExistsFunc clause in SPARQL."@en;
  skos:prefLabel "ExistsFunc clause"@en;
  rdfs:isDefinedBy sparql:. 

sparql:NotExistsFunc
  a owl:Class;
  rdfs:subClassOf sparql:NonTerminalNode;
  dct:conformsTo section:NotExistsFunc;
  skos:definition "Represents a NotExistsFunc clause in SPARQL."@en;
  skos:prefLabel "NotExistsFunc clause"@en;
  rdfs:isDefinedBy sparql:. 
  
sparql:BuiltInCall
  a owl:Class;
  rdfs:subClassOf sparql:NonTerminalNode;
  dct:conformsTo section:BuiltInCall;
  skos:definition "Represents a built in call clause in SPARQL."@en;
  skos:prefLabel "BuiltInCall clause"@en;
  rdfs:isDefinedBy sparql:. 

sparql:FunctionCall
  a owl:Class;
  rdfs:subClassOf sparql:NonTerminalNode;
  dct:conformsTo section:FunctionCall;
  skos:definition "Represents a function call clause in SPARQL."@en;
  skos:prefLabel "FunctionCall clause"@en;
  rdfs:isDefinedBy sparql:.
  
sparql:IriOrFunction
  a owl:Class;
  rdfs:subClassOf sparql:NonTerminalNode;
  dct:conformsTo section:IriOrFunction;
  skos:definition "Represents an IRI or Function clause in SPARQL."@en;
  skos:prefLabel "IriOrFunction clause"@en;
  rdfs:isDefinedBy sparql:. 
   
sparql:RDFLiteral
  a owl:Class;
  rdfs:subClassOf sparql:NonTerminalNode;
  dct:conformsTo section:RDFLiteral;
  skos:definition "Represents a RDF literal clause in SPARQL."@en;
  skos:prefLabel "RDFLiteral clause"@en;
  rdfs:isDefinedBy sparql:.    

sparql:NumericLiteral
  a owl:Class;
  rdfs:subClassOf sparql:NonTerminalNode;
  dct:conformsTo section:NumericLiteral;
  skos:definition "Represents a numeric literal clause in SPARQL."@en;
  skos:prefLabel "NumericLiteral clause"@en;
  rdfs:isDefinedBy sparql:. 

sparql:BooleanLiteral
  a owl:Class;
  rdfs:subClassOf sparql:NonTerminalNode;
  dct:conformsTo section:BooleanLiteral;
  skos:definition "Represents a Boolean Literal clause in SPARQL."@en;
  skos:prefLabel "BooleanLiteral clause"@en;
  rdfs:isDefinedBy sparql:. 

sparql:Aggregate
  a owl:Class;
  rdfs:subClassOf sparql:NonTerminalNode;
  dct:conformsTo section:Aggregate;
  skos:definition "Represents an aggregate clause in SPARQL."@en;
  skos:prefLabel "Aggregate clause"@en;
  rdfs:isDefinedBy sparql:. 

sparql:String
  a owl:Class;
  rdfs:subClassOf sparql:NonTerminalNode;
  dct:conformsTo section:String;
  skos:definition "Represents a string clause in SPARQL."@en;
  skos:prefLabel "String clause"@en;
  rdfs:isDefinedBy sparql:. 

sparql:Langtag
  a owl:Class;
  rdfs:subClassOf sparql:SymbolSequence;
  dct:conformsTo section:Langtag;
  skos:definition "Represents a langtag symbol sequence in the abstract syntax tree of SPARQL."@en;
  skos:prefLabel "Langtag symbol sequence"@en;
  rdfs:isDefinedBy sparql:. 

sparql:STRING_LITERAL1
  a owl:Class;
  rdfs:subClassOf sparql:SymbolSequence;
  dct:conformsTo section:STRING_LITERAL1;
  skos:definition "Represents a STRING_LITERAL1 symbol sequence in the abstract syntax tree of SPARQL."@en;
  skos:prefLabel "STRING_LITERAL1 symbol sequence"@en;
  rdfs:isDefinedBy sparql:. 

sparql:STRING_LITERAL2
  a owl:Class;
  rdfs:subClassOf sparql:SymbolSequence;
  dct:conformsTo section:STRING_LITERAL2;
  skos:definition "Represents a STRING_LITERAL2 symbol sequence in the abstract syntax tree of SPARQL."@en;
  skos:prefLabel "STRING_LITERAL2 symbol sequence"@en;
  rdfs:isDefinedBy sparql:. 

sparql:STRING_LITERAL_LONG1
  a owl:Class;
  rdfs:subClassOf sparql:SymbolSequence;
  dct:conformsTo section:STRING_LITERAL_LONG1;
  skos:definition "Represents a STRING_LITERAL_LONG1 symbol sequence in the abstract syntax tree of SPARQL."@en;
  skos:prefLabel "STRING_LITERAL_LONG1 symbol sequence"@en;
  rdfs:isDefinedBy sparql:. 

sparql:STRING_LITERAL_LONG2
  a owl:Class;
  rdfs:subClassOf sparql:SymbolSequence;
  dct:conformsTo section:STRING_LITERAL_LONG2;
  skos:definition "Represents a STRING_LITERAL_LONG2 symbol sequence in the abstract syntax tree of SPARQL."@en;
  skos:prefLabel "STRING_LITERAL_LONG2 symbol sequence"@en;
  rdfs:isDefinedBy sparql:. 

sparql:Echar
  a owl:Class;
  rdfs:subClassOf sparql:SymbolSequence;
  dct:conformsTo section:Echar;
  skos:definition "Represents an Echar symbol sequence in the abstract syntax tree of SPARQL."@en;
  skos:prefLabel "Echar symbol sequence"@en;
  rdfs:isDefinedBy sparql:. 

sparql:Integer
  a owl:Class;
  rdfs:subClassOf sparql:CharacterSequence;
  dct:conformsTo section:Integer;
  skos:definition "Represents an Integer symbol sequence in the abstract syntax tree of SPARQL."@en;
  skos:prefLabel "Integer character sequence"@en;
  rdfs:isDefinedBy sparql:. 

sparql:Double
  a owl:Class;
  rdfs:subClassOf sparql:SymbolSequence;
  dct:conformsTo section:Double;
  skos:definition "Represents a Double symbol sequence in the abstract syntax tree of SPARQL."@en;
  skos:prefLabel "Double symbol sequence"@en;
  rdfs:isDefinedBy sparql:. 

sparql:Decimal
  a owl:Class;
  rdfs:subClassOf sparql:SymbolSequence;
  dct:conformsTo section:Decimal;
  skos:definition "Represents a Decimal symbol sequence in the abstract syntax tree of SPARQL."@en;
  skos:prefLabel "Decimal symbol sequence"@en;
  rdfs:isDefinedBy sparql:. 

sparql:Exponent
  a owl:Class;
  rdfs:subClassOf sparql:CharacterSequence;
  dct:conformsTo section:Exponent;
  skos:definition "Represents an Exponent character sequence in the abstract syntax tree of SPARQL."@en;
  skos:prefLabel "Exponent character sequence"@en;
  rdfs:isDefinedBy sparql:. 

sparql:Integer_Positive
  a owl:Class;
  rdfs:subClassOf sparql:SymbolSequence;
  dct:conformsTo section:Integer_Positive;
  skos:definition "Represents a Integer Positive symbol sequence in the abstract syntax tree of SPARQL."@en;
  skos:prefLabel "Integer Positive symbol sequence"@en;
  rdfs:isDefinedBy sparql:. 

sparql:Decimal_Positive
  a owl:Class;
  rdfs:subClassOf sparql:SymbolSequence;
  dct:conformsTo section:Decimal_Positive;
  skos:definition "Represents a Decimal Positive symbol sequence in the abstract syntax tree of SPARQL."@en;
  skos:prefLabel "Decimal Positive symbol sequence"@en;
  rdfs:isDefinedBy sparql:. 

sparql:Double_Positive
  a owl:Class;
  rdfs:subClassOf sparql:SymbolSequence;
  dct:conformsTo section:Double_Positive;
  skos:definition "Represents a Double Positive symbol sequence in the abstract syntax tree of SPARQL."@en;
  skos:prefLabel "Double Positive symbol sequence"@en;
  rdfs:isDefinedBy sparql:. 

sparql:Integer_Negative
  a owl:Class;
  rdfs:subClassOf sparql:SymbolSequence;
  dct:conformsTo section:Integer_Negative;
  skos:definition "Represents a Integer Negative symbol sequence in the abstract syntax tree of SPARQL."@en;
  skos:prefLabel "Integer Negative symbol sequence"@en;
  rdfs:isDefinedBy sparql:. 

sparql:Decimal_Negative
  a owl:Class;
  rdfs:subClassOf sparql:SymbolSequence;
  dct:conformsTo section:Decimal_Negative;
  skos:definition "Represents a Decimal Negative symbol sequence in the abstract syntax tree of SPARQL."@en;
  skos:prefLabel "Decimal Negative symbol sequence"@en;
  rdfs:isDefinedBy sparql:. 

sparql:Double_Negative
  a owl:Class;
  rdfs:subClassOf sparql:SymbolSequence;
  dct:conformsTo section:Double_Negative;
  skos:definition "Represents a Double Negative symbol sequence in the abstract syntax tree of SPARQL."@en;
  skos:prefLabel "Double Negative symbol sequence"@en;
  rdfs:isDefinedBy sparql:. 
  
sparql:BlankNode
  a owl:Class;
  rdfs:subClassOf sparql:NonTerminalNode;
  dct:conformsTo section:BlankNode ;
  skos:definition "Represents a blank node clause in the abstract syntax tree of SPARQL syntax."@en;
  skos:prefLabel "Blank Node"@en;
  rdfs:isDefinedBy sparql:.  

sparql:BlankNodeLabel
  a owl:Class;
  rdfs:subClassOf sparql:SymbolSequence;
  dct:conformsTo section:BlankNodeLabel ;
  skos:definition "Represents a blank node label symbol sequence in the abstract syntax tree of SPARQL."@en;
  skos:prefLabel "Blank Node Label symbol sequence"@en;
  rdfs:isDefinedBy sparql:. 

sparql:Anon
  a owl:Class;
  rdfs:subClassOf sparql:SymbolSequence;
  dct:conformsTo section:Anon ;
  skos:definition "Represents an Anon symbol sequence in the abstract syntax tree of SPARQL."@en;
  skos:prefLabel "Anon"@en;
  rdfs:isDefinedBy sparql:. 
  
sparql:TriplesTemplate
  a owl:Class;
  rdfs:subClassOf sparql:NonTerminalNode;
  dct:conformsTo section:TriplesTemplate;
  skos:definition "Represents a triple template in SPARQL, used in CONSTRUCT queries to create RDF triples."@en;
  skos:prefLabel "Triples Template"@en;
  rdfs:isDefinedBy sparql:.

sparql:GroupClause
  a owl:Class;
  rdfs:subClassOf sparql:NonTerminalNode;
  dct:conformsTo section:GroupClause;
  skos:definition "Represents a GROUP BY clause in SPARQL, grouping results by specified expressions."@en;
  skos:prefLabel "Group Clause"@en;
  rdfs:isDefinedBy sparql:.

sparql:GroupCondition
  a owl:Class;
  rdfs:subClassOf sparql:NonTerminalNode;
  dct:conformsTo section:GroupCondition;
  skos:definition "Represents a group condition clause in SPARQL."@en;
  skos:prefLabel "Group Condition"@en;
  rdfs:isDefinedBy sparql:.
  
sparql:Group
  a owl:Class;
  rdfs:subClassOf sparql:Keyword;
  dct:conformsTo section:Group;
  skos:definition "Represents the GROUP keyword in the abstract syntax tree of SPARQL."@en;
  skos:prefLabel "GROUP keyword"@en;
  sparql:syntax 'GROUP';
  rdfs:isDefinedBy sparql:.  

sparql:By
  a owl:Class;
  rdfs:subClassOf sparql:Keyword;
  dct:conformsTo section:By;
  skos:definition "Represents the BY keyword in the abstract syntax tree of SPARQL."@en;
  skos:prefLabel "BY keyword"@en;
  sparql:syntax 'BY';
  rdfs:isDefinedBy sparql:.    

sparql:HavingClause
  a owl:Class;
  rdfs:subClassOf sparql:NonTerminalNode;
  dct:conformsTo section:HavingClause;
  skos:definition "Represents a HAVING clause in SPARQL, applying constraints on the result set after grouping."@en;
  skos:prefLabel "Having Clause"@en;
  rdfs:isDefinedBy sparql:.

sparql:Having
  a owl:Class;
  rdfs:subClassOf sparql:Keyword;
  dct:conformsTo section:Having;
  skos:definition "Represents the HAVING keyword in the abstract syntax tree of SPARQL."@en;
  skos:prefLabel "HAVING keyword"@en;
  sparql:syntax 'HAVING';
  rdfs:isDefinedBy sparql:.  

sparql:HavingCondition
  a owl:Class;
  rdfs:subClassOf sparql:NonTerminalNode;
  dct:conformsTo section:HavingCondition;
  skos:definition "Represents a HAVING condition in SPARQL."@en;
  skos:prefLabel "Having Condition"@en;
  rdfs:isDefinedBy sparql:.
  
sparql:OrderClause
  a owl:Class;
  rdfs:subClassOf sparql:NonTerminalNode;
  dct:conformsTo section:OrderClause;
  skos:definition "Represents an ORDER BY clause in SPARQL, specifying the order of solutions in the result set."@en;
  skos:prefLabel "Order Clause"@en;
  rdfs:isDefinedBy sparql:.

sparql:Order
  a owl:Class;
  rdfs:subClassOf sparql:Keyword;
  dct:conformsTo section:Order;
  skos:definition "Represents the ORDER keyword in the abstract syntax tree of SPARQL."@en;
  skos:prefLabel "ORDER keyword"@en;
  sparql:syntax 'ORDER';
  rdfs:isDefinedBy sparql:.  
  
sparql:OrderCondition
  a owl:Class;
  rdfs:subClassOf sparql:NonTerminalNode;
  dct:conformsTo section:OrderCondition;
  skos:definition "Represents a condition used in an ORDER BY clause to determine the order of the result set."@en;
  skos:prefLabel "Order Condition"@en;
  rdfs:isDefinedBy sparql:.

sparql:ASC
  a owl:Class;
  rdfs:subClassOf sparql:Keyword;
  dct:conformsTo section:ASC;
  skos:definition "Represents the ASC keyword in the abstract syntax tree of SPARQL."@en;
  skos:prefLabel "ASC keyword"@en;
  sparql:syntax 'ASC';
  rdfs:isDefinedBy sparql:.

sparql:DESC
  a owl:Class;
  rdfs:subClassOf sparql:Keyword;
  dct:conformsTo section:DESC;
  skos:definition "Represents the DESC keyword in the abstract syntax tree of SPARQL."@en;
  skos:prefLabel "DESC keyword"@en;
  sparql:syntax 'DESC';
  rdfs:isDefinedBy sparql:.    

sparql:LimitClause
  a owl:Class;
  rdfs:subClassOf sparql:NonTerminalNode;
  dct:conformsTo section:LimitClause;
  skos:definition "Represents a LIMIT clause in SPARQL, specifying the maximum number of solutions to return."@en;
  skos:prefLabel "Limit Clause"@en;
  rdfs:isDefinedBy sparql:.

sparql:Limit
  a owl:Class;
  rdfs:subClassOf sparql:Keyword;
  dct:conformsTo section:Limit;
  skos:definition "Represents the LIMIT keyword in the abstract syntax tree of SPARQL."@en;
  skos:prefLabel "LIMIT keyword"@en;
  sparql:syntax 'LIMIT';
  rdfs:isDefinedBy sparql:.    

sparql:LimitOffsetClauses
  a owl:Class;
  rdfs:subClassOf sparql:NonTerminalNode;
  dct:conformsTo section:LimitOffsetClauses;
  skos:definition "Represents limit offset clauses in SPARQL."@en;
  skos:prefLabel "Limit Offset Clauses"@en;
  rdfs:isDefinedBy sparql:.

sparql:OffsetClause
  a owl:Class;
  rdfs:subClassOf sparql:NonTerminalNode;
  dct:conformsTo section:OffsetClause;
  skos:definition "Represents an OFFSET clause in SPARQL, specifying the number of solutions to skip in the result set."@en;
  skos:prefLabel "Offset Clause"@en;
  rdfs:isDefinedBy sparql:.

sparql:Offset
  a owl:Class;
  rdfs:subClassOf sparql:Keyword;
  dct:conformsTo section:Offset;
  skos:definition "Represents the OFFSET keyword in the abstract syntax tree of SPARQL."@en;
  skos:prefLabel "OFFSET keyword"@en;
  sparql:syntax 'OFFSET';
  rdfs:isDefinedBy sparql:.    

sparql:ValuesClause
  a owl:Class;
  rdfs:subClassOf sparql:NonTerminalNode;
  dct:conformsTo section:ValuesClause;
  skos:definition "Represents a VALUES clause in SPARQL, providing explicit values for variables within the query."@en;
  skos:prefLabel "Values Clause"@en;
  rdfs:isDefinedBy sparql:.

sparql:Update
  a owl:Class;
  rdfs:subClassOf sparql:NonTerminalNode;
  dct:conformsTo section:Update;
  skos:definition "Represents a SPARQL update request, modifying data in the RDF store."@en;
  skos:prefLabel "Update"@en;
  rdfs:isDefinedBy sparql:.

sparql:Update1
  a owl:Class;
  rdfs:subClassOf sparql:NonTerminalNode;
  dct:conformsTo section:Update1;
  skos:definition "Represents a single update operation within an update request in SPARQL."@en;
  skos:prefLabel "Update1"@en;
  rdfs:isDefinedBy sparql:.

sparql:Load
  a owl:Class;
  rdfs:subClassOf sparql:NonTerminalNode;
  dct:conformsTo section:Load;
  skos:definition "Represents a LOAD operation in SPARQL, loading RDF data into a graph from a source."@en;
  skos:prefLabel "Load"@en;
  rdfs:isDefinedBy sparql:.

sparql:Clear
  a owl:Class;
  rdfs:subClassOf sparql:NonTerminalNode;
  dct:conformsTo section:Clear;
  skos:definition "Represents a CLEAR operation in SPARQL, removing all data from a specified graph."@en;
  skos:prefLabel "Clear"@en;
  rdfs:isDefinedBy sparql:.

sparql:Drop
  a owl:Class;
  rdfs:subClassOf sparql:NonTerminalNode;
  dct:conformsTo section:Drop;
  skos:definition "Represents a DROP operation in SPARQL, removing a graph from the dataset."@en;
  skos:prefLabel "Drop"@en;
  rdfs:isDefinedBy sparql:.

sparql:Create
  a owl:Class;
  rdfs:subClassOf sparql:NonTerminalNode;
  dct:conformsTo section:Create;
  skos:definition "Represents a CREATE operation in SPARQL, creating an empty graph in the dataset."@en;
  skos:prefLabel "Create"@en;
  rdfs:isDefinedBy sparql:.

sparql:Add
  a owl:Class;
  rdfs:subClassOf sparql:NonTerminalNode;
  dct:conformsTo section:Add;
  skos:definition "Represents an ADD operation in SPARQL, adding triples from one graph to another."@en;
  skos:prefLabel "Add"@en;
  rdfs:isDefinedBy sparql:.

sparql:Move
  a owl:Class;
  rdfs:subClassOf sparql:NonTerminalNode;
  dct:conformsTo section:Move;
  skos:definition "Represents a MOVE operation in SPARQL, moving triples from one graph to another."@en;
  skos:prefLabel "Move"@en;
  rdfs:isDefinedBy sparql:.

sparql:Copy
  a owl:Class;
  rdfs:subClassOf sparql:NonTerminalNode;
  dct:conformsTo section:Copy;
  skos:definition "Represents a COPY operation in SPARQL, copying triples from one graph to another."@en;
  skos:prefLabel "Copy"@en;
  rdfs:isDefinedBy sparql:.

sparql:InsertData
  a owl:Class;
  rdfs:subClassOf sparql:NonTerminalNode;
  dct:conformsTo section:InsertData;
  skos:definition "Represents an INSERT DATA operation in SPARQL, inserting triples directly into the dataset."@en;
  skos:prefLabel "Insert Data"@en;
  rdfs:isDefinedBy sparql:.

sparql:DeleteData
  a owl:Class;
  rdfs:subClassOf sparql:NonTerminalNode;
  dct:conformsTo section:DeleteData;
  skos:definition "Represents a DELETE DATA operation in SPARQL, removing triples directly from the dataset."@en;
  skos:prefLabel "Delete Data"@en;
  rdfs:isDefinedBy sparql:.

sparql:DeleteWhere
  a owl:Class;
  rdfs:subClassOf sparql:NonTerminalNode;
  dct:conformsTo section:DeleteWhere;
  skos:definition "Represents a DELETE WHERE operation in SPARQL, removing triples based on a pattern."@en;
  skos:prefLabel "Delete Where"@en;
  rdfs:isDefinedBy sparql:.

sparql:Modify
  a owl:Class;
  rdfs:subClassOf sparql:NonTerminalNode;
  dct:conformsTo section:Modify;
  skos:definition "Represents a MODIFY operation in SPARQL, applying a set of INSERT and DELETE patterns to the dataset."@en;
  skos:prefLabel "Modify"@en;
  rdfs:isDefinedBy sparql:.

sparql:DeleteClause
  a owl:Class;
  dct:conformsTo section:DeleteClause;
  skos:definition "Represents a DELETE clause in SPARQL, specifying triples to be deleted."@en;
  skos:prefLabel "Delete Clause"@en;
  rdfs:isDefinedBy sparql:.

sparql:InsertClause
  a owl:Class;
  rdfs:subClassOf sparql:NonTerminalNode;
  dct:conformsTo section:InsertClause;
  skos:definition "Represents an INSERT clause in SPARQL, specifying triples to be inserted."@en;
  skos:prefLabel "Insert Clause"@en;
  rdfs:isDefinedBy sparql:.

sparql:UsingClause
  a owl:Class;
  rdfs:subClassOf sparql:NonTerminalNode;
  dct:conformsTo section:UsingClause;
  skos:definition "Represents an Using clause in SPARQL."@en;
  skos:prefLabel "Using Clause"@en;
  rdfs:isDefinedBy sparql:.

sparql:GraphOrDefault
  a owl:Class;
  rdfs:subClassOf sparql:NonTerminalNode;
  dct:conformsTo section:GraphOrDefault;
  skos:definition "Represents a graph or default in SPARQL."@en;
  skos:prefLabel "Graph or default"@en;
  rdfs:isDefinedBy sparql:.

sparql:GraphRef
  a owl:Class;
  rdfs:subClassOf sparql:NonTerminalNode;
  dct:conformsTo section:GraphRef;
  skos:definition "Represents a graph ref in SPARQL."@en;
  skos:prefLabel "Graph ref"@en;
  rdfs:isDefinedBy sparql:.

sparql:GraphRefAll
  a owl:Class;
  rdfs:subClassOf sparql:NonTerminalNode;
  dct:conformsTo section:GraphRefAll;
  skos:definition "Represents a graph ref all in SPARQL."@en;
  skos:prefLabel "Graph ref all"@en;
  rdfs:isDefinedBy sparql:.

sparql:QuadPattern
  a owl:Class;
  rdfs:subClassOf sparql:NonTerminalNode;
  dct:conformsTo section:QuadPattern;
  skos:definition "Represents a quad pattern in SPARQL."@en;
  skos:prefLabel "Quad pattern"@en;
  rdfs:isDefinedBy sparql:.

sparql:QuadData
  a owl:Class;
  rdfs:subClassOf sparql:NonTerminalNode;
  dct:conformsTo section:QuadData;
  skos:definition "Represents a quad data in SPARQL."@en;
  skos:prefLabel "Quad data"@en;
  rdfs:isDefinedBy sparql:.

sparql:Quads
  a owl:Class;
  rdfs:subClassOf sparql:NonTerminalNode;
  dct:conformsTo section:Quads;
  skos:definition "Represents quads in SPARQL."@en;
  skos:prefLabel "Quads"@en;
  rdfs:isDefinedBy sparql:.

sparql:QuadsNotTriples
  a owl:Class;
  rdfs:subClassOf sparql:NonTerminalNode;
  dct:conformsTo section:QuadsNotTriples;
  skos:definition "Represents quads not triples in SPARQL."@en;
  skos:prefLabel "Quads not triples"@en;
  rdfs:isDefinedBy sparql:.
  
### Datatype properties ###

sparql:fragment
  a owl:DatatypeProperty;
  rdfs:domain sparql:Node;
  rdfs:range xsd:string;
  skos:prefLabel "the fragment property";
  skos:definition "The property that is used to represent an actual SPARQL query fragment".

### Shapes ###

shp:NonTerminalNode
    a sh:NodeShape;
    sh:rule rule:NonTerminalNode;
    sh:target target:NonTerminalNode;
    skos:prefLabel 'Non-terminal node shape'@en;
    rdfs:isDefinedBy sparql:.

target:NonTerminalNode
    a sh:SPARQLTarget;
    rdfs:comment 'Select non-terminal nodes in a SPARQL Abstract Syntax Tree that do not have a SPARQL fragment yet, and whose child nodes all have a SPARQL fragment already.'@en;
    sh:prefixes sparql:;
    sh:select '''
select $this {

  # Select all non-terminal nodes in the SPARQL query...
  $this a/rdfs:subClassOf* sparql:NonTerminalNode.
  
  # ...that do not yet have a sparql fragment.
  filter not exists { $this sparql:fragment []. }
  
  # ...but whose child nodes all have an SPARQL fragment (both non-terminal child nodes and terminal child nodes)
  minus {
    $this ?member ?child.
    filter not exists { ?child sparql:fragment []. }
    ?child a/rdfs:subClassOf* sparql:Node.
  }
}''';
    rdfs:isDefinedBy sparql:.

  rule:NonTerminalNode
    a sh:SPARQLRule;
    rdfs:comment 'Create the SPARQL fragment for a non-terminal node in the abstract syntax tree of SPARQL.'@en;
    skos:prefLabel 'SPARQL non-terminal node serialization algorithm'@en;
    sh:prefixes sparql:;
    sh:construct '''
construct {

  # Assert the new SPARQL fragment for this SPARQL node
  $this sparql:fragment ?fragment.
  
} where {
 
  # Get the SPARQL fragments of child nodes, if there are any. Note how each child node fragment is separated by a space.
  {
    select $this (group_concat(str(?fragment);separator=' ') as ?fragments) {
      {
        select $this ?member ?fragment {
          $this ?member ?node.
          filter(strstarts(str(?member),concat(str(rdf:),'_')))
          ?node sparql:fragment ?fragment.
        }
        order by xsd:integer(strafter(str(?member),concat(str(rdf:),'_')))
      }
    } group by $this
  }
  # Build the SPARQL fragment for this node, by combining everything retrieved above.
  bind(strdt(concat(if(?fragments='','',?fragments)),xsd:string) as ?fragment)
  
}''';
    rdfs:isDefinedBy sparql:.

shp:Keyword
    a sh:NodeShape;
    sh:rule rule:Keyword;
    sh:target target:Keyword;
    skos:prefLabel 'Keyword shape'@en;
    rdfs:isDefinedBy sparql:.    

target:Keyword
    a sh:SPARQLTarget;
    rdfs:comment ''@en;
    sh:prefixes sparql:;
    sh:select '''
select $this {

  # Select all keyword nodes in the SPARQL query...
  $this a/rdfs:subClassOf* sparql:Keyword.
  
  # ...that do not yet have a sparql fragment.
  filter not exists { $this sparql:fragment []. }
  
}''';
    rdfs:isDefinedBy sparql:.

rule:Keyword
    a sh:SPARQLRule;
    rdfs:comment ''@en;
    skos:prefLabel ''@en;
    sh:prefixes sparql:;
    sh:construct '''
construct {

  # Assert the new SPARQL fragment for this SPARQL node
  $this sparql:fragment ?fragment.
  
} where {
  
  $this a ?class.
  ?class sparql:syntax ?syntax.
  
  # Build the SPARQL fragment for the keyword.
  bind(strdt(?syntax,xsd:string) as ?fragment)
  
}''';
    rdfs:isDefinedBy sparql:.      

shp:Symbol
    a sh:NodeShape;
    sh:rule rule:Symbol;
    sh:target target:Symbol;
    skos:prefLabel 'Symbol shape'@en;
    rdfs:isDefinedBy sparql:.    

target:Symbol
    a sh:SPARQLTarget;
    rdfs:comment ''@en;
    sh:prefixes sparql:;
    sh:select '''
select $this {

  # Select all symbol nodes in the SPARQL query...
  $this a/rdfs:subClassOf* sparql:Symbol.
  
  # ...that do not yet have a sparql fragment.
  filter not exists { $this sparql:fragment []. }
  
}''';
    rdfs:isDefinedBy sparql:.

rule:Symbol
    a sh:SPARQLRule;
    rdfs:comment ''@en;
    skos:prefLabel ''@en;
    sh:prefixes sparql:;
    sh:construct '''
construct {

  # Assert the new SPARQL fragment for this SPARQL node
  $this sparql:fragment ?fragment.
  
} where {
  
  $this a ?class.
  ?class sparql:syntax ?syntax.
  
  # Build the SPARQL fragment for the symbol.
  bind(strdt(?syntax,xsd:string) as ?fragment)
  
}''';
    rdfs:isDefinedBy sparql:.      

shp:SymbolSequence
    a sh:NodeShape;
    sh:rule rule:SymbolSequence;
    sh:target target:SymbolSequence;
    skos:prefLabel 'Symbol sequence shape'@en;
    rdfs:isDefinedBy sparql:.    

target:SymbolSequence
    a sh:SPARQLTarget;
    rdfs:comment ''@en;
    sh:prefixes sparql:;
    sh:select '''
select $this {

  # Select all symbol sequence nodes in the SPARQL query...
  $this a/rdfs:subClassOf* sparql:SymbolSequence.
  
  # ...that do not yet have a sparql fragment.
  filter not exists { $this sparql:fragment []. }
  
 # ...but whose child nodes all have an SPARQL fragment 
  minus {
    $this ?member ?child.
    filter not exists { ?child sparql:fragment []. }
    ?child a/rdfs:subClassOf* sparql:Node.
  }
}''';
    rdfs:isDefinedBy sparql:.

  rule:SymbolSequence
    a sh:SPARQLRule;
    rdfs:comment 'Create the SPARQL fragment for a symbol sequence in the abstract syntax tree of SPARQL.'@en;
    skos:prefLabel 'SPARQL symbol sequence serialization algorithm'@en;
    sh:prefixes sparql:;
    sh:construct '''
construct {

  # Assert the new SPARQL fragment for this SPARQL node
  $this sparql:fragment ?fragment.
  
} where {
 
  # Get the SPARQL fragments of child nodes, if there are any. Note how the fragments of the child nodes are concatenated without space separator.
  {
    select $this (group_concat(str(?fragment);separator='') as ?fragments) {
      {
        select $this ?member ?fragment {
          $this ?member ?node.
          filter(strstarts(str(?member),concat(str(rdf:),'_')))
          ?node sparql:fragment ?fragment.
        }
        order by xsd:integer(strafter(str(?member),concat(str(rdf:),'_')))
      }
    } group by $this
  }
  # Build the SPARQL fragment for this node, by combining everything retrieved above.
  bind(strdt(concat(if(?fragments='','',?fragments)),xsd:string) as ?fragment)
  
}''';
    rdfs:isDefinedBy sparql:.

shp:CharacterSequence
    a sh:NodeShape;
    sh:rule rule:CharacterSequence;
    sh:target target:CharacterSequence;
    skos:prefLabel 'CharacterSequence shape'@en;
    rdfs:isDefinedBy sparql:.    

target:CharacterSequence
    a sh:SPARQLTarget;
    rdfs:comment ''@en;
    sh:prefixes sparql:;
    sh:select '''
select $this {

  # Select all character sequence nodes in the SPARQL query...
  $this a/rdfs:subClassOf* sparql:CharacterSequence.
  
  # ...that do not yet have a sparql fragment.
  filter not exists { $this sparql:fragment []. }
  
}''';
    rdfs:isDefinedBy sparql:.

rule:CharacterSequence
    a sh:SPARQLRule;
    rdfs:comment ''@en;
    skos:prefLabel ''@en;
    sh:prefixes sparql:;
    sh:construct '''
construct {

  # Assert the new SPARQL fragment for this SPARQL node
  $this sparql:fragment ?fragment.
  
} where {
  
  $this rdf:value ?fragment.
  
}''';
    rdfs:isDefinedBy sparql:.   